{"version":3,"sources":["canvas-starfield.js","StarfieldCanvas.js","components/Graph.js","services/Services.js","Calculate/Root of Equation/Graphical.js","Calculate/Root of Equation/Bisection.js","Calculate/Root of Equation/False_position.js","Calculate/Root of Equation/Onepoint.js","Calculate/Root of Equation/Newton-raphson.js","Calculate/Root of Equation/Secant.js","Calculate/Linear Algebra/Cramer.js","Calculate/Linear Algebra/Gauss.js","Calculate/Linear Algebra/Jordan.js","Calculate/Linear Algebra/Inverse.js","Calculate/Linear Algebra/LU.js","Calculate/Linear Algebra/Cholesky.js","Calculate/Linear Algebra/Jacobi.js","Calculate/Linear Algebra/Seidel.js","Calculate/Linear Algebra/Gradient.js","App.js","index.js"],"names":["sf","Starfield","config","this","canvas","document","querySelector","ctx","getContext","style","getComputedStyle","vx","vy","maxStars","numStars","maxRadius","shootingStarInterval","lastShootingStar","performance","now","undefined","onResize","window","addEventListener","bind","prototype","star","x","Math","round","random","width","y","height","r","l","bl","dl","loadStars","stars","Array","i","ratio","devicePixelRatio","replace","draw","beginPath","fillStyle","arc","PI","fill","start","tick","timeStamp","fillRect","length","abs","shootingStar","frameId","requestAnimationFrame","module","exports","StarfieldCanvas","Component","state","starfield","componentDidMount","setState","render","id","zIndex","position","top","left","bottom","right","maxWidth","objectFit","opacity","Graph","props","fx","title","data","range","toArray","map","compile","evaluate","type","marker","color","layout","func","X","expr","scope","parseFloat","funcDiff","derivative","error","xnew","xold","InputStyle","background","fontWeight","fontSize","dataInTable","columns","dataIndex","key","Graphical","constructor","super","finish","showOutputCard","showGraph","handleChange","graphical","console","log","parseInt","push","createTable","iteration","event","target","name","value","padding","className","borderRadius","onChange","size","onClick","bordered","dataSource","bodyStyle","Bisection","xl","xr","moveLeft","bisection","increaseFunction","xm","sum","n","toFixed","FalsePosition","false_position","xi","epsilon","Onepoint","x0","onepoint","Newton","newton_raphson","Secant","x1","secant","A","B","answer","matrixA","matrixB","Cramer","row","column","showDimentionForm","showMatrixForm","cramer","initMatrix","counter","transformMatrix","JSON","parse","stringify","j","det","createMatrix","backgroundColor","marginInlineEnd","marginBlockEnd","placeholder","getElementById","float","output","Gauss","gauss","tempRow","tempColumn","k","factor","Jordan","jordan","Inverse","inverse","inv","multiply","Number","isInteger","printFraction","fraction","format","decompose","LU","Lu","lusolve","Cholesky","cholesky","temp","matrixL","sqrt","summation","L","count","matrixX","Jacobi","jacobi","appendTable","initialSchema","tag","overflowX","border","Seidel","seidel","Gradient","conjugate_gradient","positive_definite","dimention","tempMatrix","R","subtract","D","λ","transpose","add","split","join","α","lambda","SubMenu","Menu","Header","Layout","Content","Sider","Footer","App","FundFilled","mode","borderRight","overflowY","theme","Item","to","margin","minHeight","exact","path","component","FacebookFilled","rel","href","textDecoration","BookFilled","ReactDOM","StrictMode"],"mappings":"qGAAA,IAAkBA,IAKP,WAIT,SAASC,EAAUC,GACjBA,EAASA,GAAU,GAEnBC,KAAKC,OAAkC,kBAAlBF,EAAOE,OAC1BC,SAASC,cAAcJ,EAAOE,QAC9BF,EAAOE,OACTD,KAAKI,IAAMJ,KAAKC,OAAOI,WAAW,MAClCL,KAAKM,MAAQC,iBAAiBP,KAAKC,QAEnCD,KAAKQ,GAAKT,EAAOS,IAAM,IACvBR,KAAKS,GAAKV,EAAOU,IAAM,IAEvBT,KAAKU,SAAWX,EAAOY,UAAY,IACnCX,KAAKY,UAAYb,EAAOa,WAAa,IAErCZ,KAAKa,qBAAuBd,EAAOc,qBACnCb,KAAKc,iBAAmBd,KAAKa,qBAAuBE,YAAYC,WAAQC,EAGxEjB,KAAKkB,WAELC,OAAOC,iBAAiB,SAAUpB,KAAKkB,SAASG,KAAKrB,OAyFvD,OAtFAF,EAAUwB,UAAUC,KAAO,WACzB,MAAO,CACLC,EAAGC,KAAKC,MAAMD,KAAKE,SAAW3B,KAAKC,OAAO2B,OAC1CC,EAAGJ,KAAKC,MAAMD,KAAKE,SAAW3B,KAAKC,OAAO6B,QAC1CC,EAAG,GAAON,KAAKE,SAAW3B,KAAKY,UAC/BoB,EAAGP,KAAKE,SACRM,GAAI,IAAuB,EAAhBR,KAAKE,SAAe,GAC/BO,GAAkC,IAA9BT,KAAKC,MAAMD,KAAKE,UAAiB,KAAO,MAIhD7B,EAAUwB,UAAUa,UAAY,WAC9BnC,KAAKoC,MAAQ,IAAIC,MAAMrC,KAAKW,UAG5B,IADA,IAAI2B,EAAItC,KAAKW,SACN2B,KAAM,GAAGtC,KAAKoC,MAAME,GAAKtC,KAAKuB,QAGvCzB,EAAUwB,UAAUJ,SAAW,WAC7B,IAAIqB,EAAQpB,OAAOqB,kBAAoB,EAEvCxC,KAAKC,OAAO2B,MAAQ5B,KAAKM,MAAMsB,MAAMa,QAAQ,KAAM,IAAM,EAAIF,EAC7DvC,KAAKC,OAAO6B,OAAS9B,KAAKM,MAAMwB,OAAOW,QAAQ,KAAM,IAAM,EAAIF,EAE3DvC,KAAKC,OAAO2B,MAAQW,EAAQ,IAAKvC,KAAKW,SAAW,IAChDX,KAAKW,SAAWX,KAAKU,SAE1BV,KAAKmC,aAGPrC,EAAUwB,UAAUoB,KAAO,SAASnB,GAClCvB,KAAKI,IAAIuC,YACT3C,KAAKI,IAAIwC,UAAY,oBAAsBrB,EAAKS,EAAI,IACpDhC,KAAKI,IAAIyC,IAAItB,EAAKC,EAAGD,EAAKM,EAAGN,EAAKQ,EAAG,EAAG,EAAIN,KAAKqB,IAAI,GACrD9C,KAAKI,IAAI2C,QAGXjD,EAAUwB,UAAU0B,MAAQ,WAC1B,IAAIC,EAAO,SAASC,GAElBlD,KAAKI,IAAIwC,UAAY,QACrB5C,KAAKI,IAAI+C,SAAS,EAAG,EAAGnD,KAAKC,OAAO2B,MAAO5B,KAAKC,OAAO6B,QAGvD,IADA,IAAIQ,EAAItC,KAAKoC,MAAMgB,OACZd,KAAM,GAAG,CACd,IAAIf,EAAOvB,KAAKoC,MAAME,GAEtBtC,KAAK0C,KAAKnB,GAEVA,EAAKM,GAAK7B,KAAKS,GACfc,EAAKC,GAAKxB,KAAKQ,GACfe,EAAKS,GAAKT,EAAKW,GAEXT,KAAK4B,IAAI9B,EAAKS,EAAIT,EAAKU,KAAO,MAAMV,EAAKW,IAAMX,EAAKW,IACpDX,EAAKC,EAAIxB,KAAKC,OAAO2B,QAAOL,EAAKC,EAAIxB,KAAKQ,GAAK,GAAI,EAAGR,KAAKC,OAAO2B,MAAQ,GAC1EL,EAAKM,EAAI7B,KAAKC,OAAO6B,SAAQP,EAAKM,EAAI7B,KAAKS,GAAK,GAAI,EAAGT,KAAKC,OAAO6B,OAAS,GAG9E9B,KAAKsD,cACP/B,EAAOvB,KAAKsD,aAEZtD,KAAK0C,KAAKnB,GAEVA,EAAKM,GAAK,EACVN,EAAKC,GAAK,EACVD,EAAKS,GAAKT,EAAKW,GACfX,EAAKQ,GAAK,IAENR,EAAKQ,GAAK,IAAG/B,KAAKsD,kBAAerC,IAE5BjB,KAAKa,sBAEVqC,EAAYlD,KAAKc,kBAAoBd,KAAKa,uBAC5Cb,KAAKsD,aAAetD,KAAKuB,OACzBvB,KAAKc,iBAAmBoC,EACxBlD,KAAKsD,aAAavB,EAAI,GAI1B/B,KAAKuD,QAAUpC,OAAOqC,sBAAsBP,IAE5C5B,KAAKrB,MAEPA,KAAKuD,QAAUpC,OAAOqC,sBAAsBP,IAGvCnD,GArH8B2D,EAAOC,QAAU7D,K,0LCCxD,MAAM8D,UAAwBC,YAAW,eAAD,oBACvCC,MAAQ,CACPC,UAAW,MAEZC,oBACC,MAAMD,EAAY,IAAIhE,IAAU,CAC/BG,OAAQ,aACRU,SAAU,IACVC,UAAW,EACXC,qBAAsB,IAEvBiD,EAAUd,QACVhD,KAAKgE,UAAUH,IAAD,CAAcC,gBAG7BG,SACC,OACC,wBACCC,GAAG,YACH5D,MAAO,CACN6D,QAAS,EACTC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACP5C,MAAO,OACP6C,SAAS,QACT3C,OAAQ,OACR4C,UAAW,QACXC,QAAS,QAOChB,Q,uHCpCA,MAAMiB,UAAchB,YAC/BK,SAAU,IAAD,EACejE,KAAK6E,MAAnBC,EADD,EACCA,GAAIC,EADL,EACKA,MACV,OACI,cAAC,IAAD,CACIC,KAAM,CACF,CACIxD,EAAGyD,cAAO,GAAI,GAAI,IAAKC,UACvBrD,EAAGoD,cAAO,GAAI,GAAI,IAAKC,UAAUC,KAAI,SAAU3D,GAC3C,OAAO4D,YAAQN,GAAIO,SAAS,CAAE7D,EAAGA,OAErC8D,KAAM,UACNC,OAAQ,CAAEC,MAAO,SAGzBC,OAAQ,CAAEV,MAAOA,MClBjC,MAAMW,EAAO,CAACZ,EAAIa,KACd,IAAIC,EAAOR,YAAQN,GACnB,IAAIe,EAAQ,CAAErE,EAAGsE,WAAWH,IAC5B,OAAOC,EAAKP,SAASQ,IAEnBE,EAAYJ,IACd,IAAIC,EAAOI,YAAWL,EAAG,KACzB,IAAIE,EAAQ,CAACrE,EAAEsE,WAAWH,IAC1B,OAAOC,EAAKP,SAASQ,IAEnBI,EAAQ,CAACC,EAAMC,IACV1E,KAAK4B,KAAK6C,EAAOC,GAAQD,GCJ9BE,EAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAGd,IAAIC,EACJ,MAAMC,EAAU,CACZ,CACI1B,MAAO,YACP2B,UAAW,YACXC,IAAK,aAET,CACI5B,MAAO,IACP2B,UAAW,IACXC,IAAK,KAET,CACI5B,MAAO,IACP4B,IAAK,IACLD,UAAW,MAInB,MAAME,UAAkBhD,YAEpBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTiB,GAAI,GACJ9B,MAAO,EACP+D,OAAQ,EACRC,gBAAgB,EAChBC,WAAW,GAEfjH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKmH,UAAYnH,KAAKmH,UAAU9F,KAAKrB,MAGzCmH,YACI,IAAInC,EAAO,GACXA,EAAI,EAAQ,GACZA,EAAI,EAAQ,GACZoC,QAAQC,WAAYrH,KAAK6D,MAAMb,OAC/B,IAAK,IAAIV,EAAIgF,SAAStH,KAAK6D,MAAMb,OAAQV,GAAKgF,SAAStH,KAAK6D,MAAMkD,QAASzE,IACvE0C,EAAI,EAAMuC,KAAKjF,GACf0C,EAAI,EAAMuC,KAAK7B,EAAKpD,IAKxBtC,KAAKwH,YAAYxC,EAAI,EAAOA,EAAI,GAChChF,KAAKgE,SAAS,CACVgD,gBAAgB,EAChBC,WAAW,IAMnBO,YAAYhG,EAAGK,GACX2E,EAAc,GACd,IAAK,IAAIlE,EAAI,EAAGA,GAAKgF,SAAStH,KAAK6D,MAAMkD,OAAS/G,KAAK6D,MAAMb,OAAQV,IACjEkE,EAAYe,KAAK,CACbE,UAAWnF,EAAI,EACfd,EAAGA,EAAEc,GACLT,EAAGA,EAAES,KAKjB4E,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SAAU,IAAD,EACuBjE,KAAK6D,MAA3BiB,EADD,EACCA,GAAI9B,EADL,EACKA,MAAO+D,EADZ,EACYA,OACjB,OACI,sBAAKzG,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,uBAEA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIzH,MAAO,CAAE+F,WAAY,UAAWb,MAAO,YAAawC,aAAa,QACjEC,SAAUjI,KAAKkH,aAFnB,UAII,sCAAa,cAAC,IAAD,CAAOgB,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAClD,uCAAc,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,QAAQtH,MAAO8F,IACtD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,IAAoB,uBAAM,uBAClF,cAAC,IAAD,CAAQlC,GAAG,gBAAgBiE,QACvB,IAAMnI,KAAKmH,UAAUrB,WAAW9C,GAAQ8C,WAAWiB,IAEnDzG,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,yBAOR,qBAAKuC,UAAU,MAAf,SACK/H,KAAK6D,MAAMoD,WAAa,cAAC,EAAD,CAAOnC,GAAIA,EAAKC,MAAM,0BAGvD,qBAAKgD,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACtDtB,GAAG,aAJP,SAMI,cAAC,IAAD,CAAOuC,QAASA,EAAS2B,UAAU,EAAMC,WAAY7B,EAAa8B,UAAW,CAAEhC,WAAY,OAAQC,SAAU,OAAQf,MAAO,mBAQzIoB,QCzHf,MAAMR,EAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAGd,IAAIC,EAAc,GAClB,MAAMC,EAAU,CACZ,CACI1B,MAAO,YACP2B,UAAW,YACXC,IAAK,aAET,CACI5B,MAAO,KACP2B,UAAW,KACXC,IAAK,MAET,CACI5B,MAAO,KACP2B,UAAW,KACXC,IAAK,MAET,CACI5B,MAAO,IACP2B,UAAW,IACXC,IAAK,KAET,CACI5B,MAAO,QACP4B,IAAK,QACLD,UAAW,UAInB,MAAM6B,UAAkB3E,YAEpBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTiB,GAAI,GACJ0D,GAAI,EACJC,GAAI,EACJzB,gBAAgB,EAChBC,WAAW,EACXyB,UAAU,GAEd1I,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAK2I,UAAY3I,KAAK2I,UAAUtH,KAAKrB,MAGzC2I,UAAUH,EAAIC,GACV,IAAIG,GAAmB,EACnBC,EAAK,EACLC,EAAMhD,WAAW,GACjBiD,EAAI,EACJ/D,EAAO,GACXA,EAAI,GAAS,GACbA,EAAI,GAAS,GACbA,EAAI,EAAQ,GACZA,EAAI,MAAY,GACZU,EAAK8C,GAAM9C,EAAK+C,KAChBG,GAAmB,GAGvB,GAEQlD,EADJmD,GAAML,EAAKC,GAAM,GACF/C,EAAK+C,GAAM,GACtBK,EAAM7C,EAAM4C,EAAIJ,GACZG,EACAJ,EAAKK,EAGLJ,EAAKI,IAKTC,EAAM7C,EAAM4C,EAAIL,GACZI,EACAH,EAAKI,EAGLL,EAAKK,GAGb7D,EAAI,GAAO+D,GAAKP,EAChBxD,EAAI,GAAO+D,GAAKN,EAChBzD,EAAI,EAAM+D,GAAKF,EAAGG,QAAQ,GAC1BhE,EAAI,MAAU+D,GAAKtH,KAAK4B,IAAIyF,GAAKE,QAAQ,GACzCD,UACKtH,KAAK4B,IAAIyF,GAAO,MACzB9I,KAAKwH,YAAYxC,EAAI,GAAQA,EAAI,GAAQA,EAAI,EAAOA,EAAI,OACxDhF,KAAKgE,SAAS,CACVgD,gBAAgB,EAChBC,WAAW,IAMnBO,YAAYgB,EAAIC,EAAIjH,EAAGyE,GACnBO,EAAc,GACd,IAAK,IAAIlE,EAAI,EAAGA,EAAIkG,EAAGpF,OAAQd,IAC3BkE,EAAYe,KAAK,CACbE,UAAWnF,EAAI,EACfkG,GAAIA,EAAGlG,GACPmG,GAAIA,EAAGnG,GACPd,EAAGA,EAAEc,GACL2D,MAAOA,EAAM3D,KAKzB4E,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAI1C5D,SAAU,IAAD,EACgBjE,KAAK6D,MAApBiB,EADD,EACCA,GAAI0D,EADL,EACKA,GAAIC,EADT,EACSA,GACd,OACI,sBAAKnI,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,uBACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aACfhD,GAAG,YAJP,UAMI,oBAAI5D,MAAO,CAACkF,MAAM,SAAlB,kBAAqC,cAAC,IAAD,CAAO0C,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAC1E,qBAAI9F,MAAO,CAACkF,MAAM,SAAlB,cAA6B,uCAAiB,cAAC,IAAD,CAAO0C,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IACnF,qBAAI9F,MAAO,CAACkF,MAAM,SAAlB,cAA6B,uCAAiB,cAAC,IAAD,CAAO0C,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAAoB,uBAAM,uBAC7G,cAAC,IAAD,CAAQlC,GAAG,gBAAgBiE,QACvB,IAAMnI,KAAK2I,UAAU7C,WAAW0C,GAAK1C,WAAW2C,IAEhDnI,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,yBAOR,qBAAKuC,UAAU,MAAf,SACK/H,KAAK6D,MAAMoD,WAAa,cAAC,EAAD,CAAOnC,GAAIA,EAAIC,MAAM,0BAGtD,qBAAKgD,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACtDtB,GAAG,aAJP,SAMI,cAAC,IAAD,CAAOuC,QAASA,EAAS4B,WAAY7B,EAAa8B,UAAW,CAAEhC,WAAY,OAAQC,SAAU,OAAQf,MAAO,mBASzH+C,QCpKf,MAAMnC,EAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAGd,IAAIC,EAAc,GAClB,MAAMC,EAAU,CACZ,CACI1B,MAAO,YACP2B,UAAW,YACXC,IAAK,aAET,CACI5B,MAAO,KACP2B,UAAW,KACXC,IAAK,MAET,CACI5B,MAAO,KACP2B,UAAW,KACXC,IAAK,MAET,CACI5B,MAAO,IACP2B,UAAW,IACXC,IAAK,KAET,CACI5B,MAAO,QACP4B,IAAK,QACLD,UAAW,UAInB,MAAMuC,UAAsBrF,YAExBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTiB,GAAI,GACJ0D,GAAI,EACJC,GAAI,EACJzB,gBAAgB,EAChBC,WAAW,GAEfjH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKkJ,eAAiBlJ,KAAKkJ,eAAe7H,KAAKrB,MAGnDkJ,eAAeV,EAAIC,GACf,IAAIG,GAAmB,EACnBO,EAAK,EACLC,EAAUtD,WAAW,GACrBiD,EAAI,EACJ/D,EAAO,GACXA,EAAI,GAAS,GACbA,EAAI,GAAS,GACbA,EAAI,EAAQ,GACZA,EAAI,MAAY,GACZU,EAAK8C,GAAM9C,EAAK+C,KAChBG,GAAmB,GAEvB,GACIO,GAAMX,EAAK9C,EAAK+C,GAAMA,EAAK/C,EAAK8C,KAAQ9C,EAAK+C,GAAM/C,EAAK8C,IACpD9C,EAAKyD,GAAMzD,EAAK+C,GAAM,GACtBW,EAAUnD,EAAMkD,EAAIV,GAChBG,EACAJ,EAAKW,EAGLV,EAAKU,IAKTC,EAAUnD,EAAMkD,EAAIX,GAChBI,EACAH,EAAKU,EAGLX,EAAKW,GAIbnE,EAAI,GAAO+D,GAAKP,EAChBxD,EAAI,GAAO+D,GAAKN,EAChBzD,EAAI,EAAM+D,GAAKI,EAAGH,QAAQ,GAC1BhE,EAAI,MAAU+D,GAAKtH,KAAK4B,IAAI+F,GAASJ,QAAQ,GAC7CD,UAEKtH,KAAK4B,IAAI+F,GAAW,MAE7BpJ,KAAKwH,YAAYxC,EAAI,GAAQA,EAAI,GAAQA,EAAI,EAAOA,EAAI,OACxDhF,KAAKgE,SAAS,CACVgD,gBAAgB,EAChBC,WAAW,IAMnBO,YAAYgB,EAAIC,EAAIjH,EAAGyE,GACnBO,EAAc,GACd,IAAK,IAAIlE,EAAI,EAAGA,EAAIkG,EAAGpF,OAAQd,IAC3BkE,EAAYe,KAAK,CACbE,UAAWnF,EAAI,EACfkG,GAAIA,EAAGlG,GACPmG,GAAIA,EAAGnG,GACPd,EAAGA,EAAEc,GACL2D,MAAOA,EAAM3D,KAMzB4E,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SAAU,IAAD,EACgBjE,KAAK6D,MAApBiB,EADD,EACCA,GAAI0D,EADL,EACKA,GAAIC,EADT,EACSA,GACd,OACI,sBAAKnI,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,4BACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAKI,sCAAa,cAAC,IAAD,CAAOgB,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAClD,mCAAK,uCAAiB,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAC3D,mCAAK,uCAAiB,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAAoB,uBAAM,uBACrF,cAAC,IAAD,CAAQlC,GAAG,gBAAgBiE,QACvB,IAAMnI,KAAKkJ,eAAepD,WAAW0C,GAAK1C,WAAW2C,IAErDnI,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,yBAOR,qBAAKuC,UAAU,MAAf,SACK/H,KAAK6D,MAAMoD,WAAa,cAAC,EAAD,CAAOnC,GAAIA,EAAIC,MAAM,wBAGtD,qBAAKgD,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACtDtB,GAAG,aAJP,SAMI,cAAC,IAAD,CAAOuC,QAASA,EAAS2B,UAAU,EAAMC,WAAY7B,EAAa8B,UAAW,CAAEhC,WAAY,OAAQC,SAAU,OAAQf,MAAO,mBASzIyD,QCtKf,MAAM7C,EAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAGd,IAAIC,EAAc,GAClB,MAAMC,EAAU,CACZ,CACI1B,MAAO,YACP2B,UAAW,YACXC,IAAK,aAET,CACI5B,MAAO,IACP2B,UAAW,IACXC,IAAK,KAET,CACI5B,MAAO,QACP4B,IAAK,QACLD,UAAW,UAInB,MAAM2C,UAAiBzF,YAEnBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTiB,GAAI,GACJwE,GAAI,EACJtC,gBAAgB,EAChBC,WAAW,GAEfjH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKuJ,SAAWvJ,KAAKuJ,SAASlI,KAAKrB,MAEvCuJ,SAASpD,GACL,IAAID,EAAO,EACPkD,EAAUtD,WAAW,GACrBiD,EAAI,EACJ/D,EAAO,GACXA,EAAI,EAAQ,GACZA,EAAI,MAAY,GAEhB,GACIkB,EAAOR,EAAKS,GACZiD,EAAUnD,EAAMC,EAAMC,GACtBnB,EAAI,EAAM+D,GAAK7C,EAAK8C,QAAQ,GAC5BhE,EAAI,MAAU+D,GAAKtH,KAAK4B,IAAI+F,GAASJ,QAAQ,GAC7CD,IACA5C,EAAOD,QAEFzE,KAAK4B,IAAI+F,GAAW,MAE7BpJ,KAAKwH,YAAYxC,EAAI,EAAOA,EAAI,OAChChF,KAAKgE,SAAS,CACVgD,gBAAgB,EAChBC,WAAW,IAMnBO,YAAYhG,EAAGyE,GACXO,EAAc,GACd,IAAK,IAAIlE,EAAI,EAAGA,EAAId,EAAE4B,OAAQd,IAC1BkE,EAAYe,KAAK,CACbE,UAAWnF,EAAI,EACfd,EAAGA,EAAEc,GACL2D,MAAOA,EAAM3D,KAKzB4E,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SAAU,IAAD,EACYjE,KAAK6D,MAAhBiB,EADD,EACCA,GAAIwE,EADL,EACKA,GACV,OACI,sBAAKhJ,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,iCACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAKI,sCAAa,cAAC,IAAD,CAAOgB,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAClD,mCAAK,uCAAiB,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAC3D,cAAC,IAAD,CAAQlC,GAAG,gBAAgBiE,QACvB,IAAMnI,KAAKuJ,SAASzD,WAAWwD,IAE/BhJ,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,yBAOR,qBAAKuC,UAAU,MAAf,SACK/H,KAAK6D,MAAMoD,WAAa,cAAC,EAAD,CAAOnC,GAAIA,EAAIC,MAAM,oCAGtD,qBAAKgD,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACtDtB,GAAG,aAJP,SAMI,cAAC,IAAD,CAAOuC,QAASA,EAAS2B,UAAU,EAAMC,WAAY7B,EAAa8B,UAAW,CAAEhC,WAAY,OAAQC,SAAU,OAAQf,MAAO,mBAWzI6D,QC9Hf,MAAMjD,EAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAGd,IAAIC,EACJ,MAAMC,EAAU,CACZ,CACI1B,MAAO,YACP2B,UAAW,YACXC,IAAK,aAET,CACI5B,MAAO,IACP2B,UAAW,IACXC,IAAK,KAET,CACI5B,MAAO,QACP4B,IAAK,QACLD,UAAW,UAInB,MAAM8C,WAAe5F,YAEjBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTiB,GAAI,GACJwE,GAAI,EACJtC,gBAAgB,EAChBC,WAAW,GAEfjH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKyJ,eAAiBzJ,KAAKyJ,eAAepI,KAAKrB,MAGnDyJ,eAAetD,GACX,IAAID,EAAO,EACPkD,EAAUtD,WAAW,GACrBiD,EAAI,EACJ/D,EAAO,GACXA,EAAI,EAAQ,GACZA,EAAI,MAAY,GAChB,GACIkB,EAAOC,EAAQT,EAAKS,GAAQJ,EAASI,GACrCiD,EAAUnD,EAAMC,EAAMC,GACtBnB,EAAI,EAAM+D,GAAK7C,EAAK8C,QAAQ,GAC5BhE,EAAI,MAAU+D,GAAKtH,KAAK4B,IAAI+F,GAASJ,QAAQ,GAC7CD,IACA5C,EAAOD,QACFzE,KAAK4B,IAAI+F,GAAW,MAE7BpJ,KAAKwH,YAAYxC,EAAI,EAAOA,EAAI,OAChChF,KAAKgE,SAAS,CACVgD,gBAAgB,EAChBC,WAAW,IAKnBO,YAAYhG,EAAGyE,GACXO,EAAc,GACd,IAAK,IAAIlE,EAAI,EAAGA,EAAId,EAAE4B,OAAQd,IAC1BkE,EAAYe,KAAK,CACbE,UAAWnF,EAAI,EACfd,EAAGA,EAAEc,GACL2D,MAAOA,EAAM3D,KAKzB4E,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SAAU,IAAD,EACYjE,KAAK6D,MAAhBiB,EADD,EACCA,GAAIwE,EADL,EACKA,GACV,OACI,sBAAKhJ,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,4BACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAKI,sCAAa,cAAC,IAAD,CAAOgB,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAClD,mCAAK,uCAAiB,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,IAC3D,cAAC,IAAD,CAAQlC,GAAG,gBAAgBiE,QACvB,IAAMnI,KAAKyJ,eAAe3D,WAAWwD,IAErChJ,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,yBAOR,qBAAKuC,UAAU,MAAf,SACK/H,KAAK6D,MAAMoD,WAAa,cAAC,EAAD,CAAOnC,GAAIA,EAAIC,MAAM,wBAGtD,qBAAKgD,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACtDtB,GAAG,aAJP,SAMI,cAAC,IAAD,CAAOuC,QAASA,EAAS2B,UAAU,EAAMC,WAAY7B,EAAa8B,UAAW,CAAEhC,WAAY,OAAQC,SAAU,OAAQf,MAAO,mBASzIgE,UC1Hf,MAAMpD,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAGd,IAAIC,GAAc,GAClB,MAAMC,GAAU,CACZ,CACI1B,MAAO,YACP2B,UAAW,YACXC,IAAK,aAET,CACI5B,MAAO,IACP2B,UAAW,IACXC,IAAK,KAET,CACI5B,MAAO,QACP4B,IAAK,QACLD,UAAW,UAInB,MAAMgD,WAAe9F,YACjBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTiB,GAAI,GACJwE,GAAI,EACJK,GAAI,EACJ3C,gBAAgB,EAChBC,WAAW,GAEfjH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAK4J,OAAS5J,KAAK4J,OAAOvI,KAAKrB,MAGnC4J,OAAON,EAAIK,GACP,IAAInI,EAAI,GAAIK,EAAI,EAAGuH,EAAUtD,WAAW,GACpCiD,EAAI,EAAGzG,EAAI,EACX0C,EAAO,GACXA,EAAI,EAAQ,GACZA,EAAI,MAAY,GAChBxD,EAAE+F,KAAK+B,GACP9H,EAAE+F,KAAKoC,GACP3E,EAAI,EAAM,GAAKsE,EACftE,EAAI,MAAU,GAAK,MAEnB,GACInD,EAAIL,EAAEc,GAAMoD,EAAKlE,EAAEc,KAAQd,EAAEc,GAAKd,EAAEc,EAAI,KAASoD,EAAKlE,EAAEc,IAAMoD,EAAKlE,EAAEc,EAAI,KACzEd,EAAE+F,KAAK1F,GACPuH,EAAUnD,EAAMpE,EAAGL,EAAEc,IACrB0C,EAAI,EAAM+D,GAAKlH,EAAEmH,QAAQ,GACzBhE,EAAI,MAAU+D,GAAKtH,KAAK4B,IAAI+F,GAASJ,QAAQ,GAE7CD,IACAzG,UAEKb,KAAK4B,IAAI+F,GAAW,MAC7BpJ,KAAKwH,YAAYxC,EAAI,EAAOA,EAAI,OAChChF,KAAKgE,SAAS,CACVgD,gBAAgB,EAChBC,WAAW,IAMnBO,YAAY3F,EAAGoE,GACXO,GAAc,GACd,IAAK,IAAIlE,EAAI,EAAGA,EAAIT,EAAEuB,OAAQd,IAC1BkE,GAAYe,KAAK,CACbE,UAAWnF,EAAI,EACfT,EAAGA,EAAES,GACL2D,MAAOA,EAAM3D,KAKzB4E,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAI1C5D,SAAU,IAAD,EACgBjE,KAAK6D,MAApBiB,EADD,EACCA,GAAIwE,EADL,EACKA,GAAIK,EADT,EACSA,GACd,OACI,sBAAKrJ,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,2BACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAKI,sCAAa,cAAC,IAAD,CAAOgB,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,KAClD,mCAAK,uCAAiB,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,KAC3D,mCAAK,uCAAiB,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,KAAKtH,MAAO8F,KAAoB,uBAAM,uBACrF,cAAC,IAAD,CAAQlC,GAAG,gBAAgBiE,QACvB,IAAMnI,KAAK4J,OAAO9D,WAAWwD,GAAKxD,WAAW6D,IAE7CrJ,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,yBAOR,qBAAKuC,UAAU,MAAf,SACK/H,KAAK6D,MAAMoD,WAAa,cAAC,EAAD,CAAOnC,GAAIA,EAAIC,MAAM,uBAGtD,qBAAKgD,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACtDtB,GAAG,aAJP,SAMI,cAAC,IAAD,CAAOuC,QAASA,GAAS4B,WAAY7B,GAAa8B,UAAW,CAAEhC,WAAY,OAAQC,SAAU,OAAQf,MAAO,mBAWzHkE,UCtIf,MAAMtD,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAKd,IAAIsD,GAAI,GAAIC,GAAI,GAAIC,GAAS,GAAIC,GAAU,GAAIC,GAAU,GACzD,MAAMC,WAAetG,YAEjBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK7C,SAAS,GACd8C,OAAQ9C,SAAS,GACjB+C,mBAAmB,EACnBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKuK,OAASvK,KAAKuK,OAAOlJ,KAAKrB,MAInCuK,SACIvK,KAAKwK,aAIL,IAHA,IAAIC,EAAU,EAGPA,GAAWzK,KAAK6D,MAAMsG,KAAK,CAE9B,IADA,IAAIO,EAAkBC,KAAKC,MAAMD,KAAKE,UAAUhB,KACvCvH,EAAI,EAAGA,EAAItC,KAAK6D,MAAMsG,IAAK7H,IAChC,IAAK,IAAIwI,EAAI,EAAGA,EAAI9K,KAAK6D,MAAMuG,OAAQU,IACnC,GAAIA,IAAML,EAAS,CACfC,EAAgBpI,GAAGwI,GAAKhB,GAAExH,GAC1B,MAMZmI,IACAV,GAAOxC,KAAK,mCAAK,8BAAMkD,IAAX,YAAuChJ,KAAKC,MAAMqJ,aAAIL,IAAoBjJ,KAAKC,MAAMqJ,aAAIlB,SACrGE,GAAOxC,KAAK,wBAGhBvH,KAAKgE,SAAS,CACVgD,gBAAgB,IAKxBgE,aAAab,EAAKC,GACd,IAAK,IAAI9H,EAAI,EAAGA,GAAK6H,EAAK7H,IAAK,CAC3B,IAAK,IAAIwI,EAAI,EAAGA,GAAKV,EAAQU,IACzBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,UACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAASwI,EAA0BM,YAAa,IAAM9I,EAASwI,GAA9C,IAAMxI,EAASwI,IAElDd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,QACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAAiB8I,YAAa,IAAM9I,GAA5B,IAAMA,IAGhCtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAMxBE,aACI,IAAK,IAAIlI,EAAI,EAAGA,EAAItC,KAAK6D,MAAMsG,IAAK7H,IAAK,CACrCuH,GAAEvH,GAAK,GACP,IAAK,IAAIwI,EAAI,EAAGA,EAAI9K,KAAK6D,MAAMuG,OAAQU,IACnCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAWwI,EAAI,IAAIjD,OAEhFiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAIuF,SAIjEX,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAI1C5D,SAAU,IAAD,EACiBjE,KAAK6D,MAArBsG,EADD,EACCA,IAAKC,EADN,EACMA,OACX,OACI,sBAAK9J,MAAO,CAAEwH,QAAS,QAAvB,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,2BACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAMKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KAAoB,uBAC5E,cAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,IAAMnI,KAAKgL,aAAab,EAAKC,GAE7B9J,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,uBAQPxF,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAON,GAC1B,4CAAc,0BAAYC,GAAQ,uBAClC,cAAC,IAAD,CACI/B,KAAK,QACLhE,GAAG,gBACH5D,MAAO,CAAE+F,WAAY,OAAQb,MAAO,SACpC2C,QAAS,IAAMnI,KAAKuK,SAJxB,4BAchB,qBAAKxC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,YAAa8F,MAAO,QAC1ErD,SAAUjI,KAAKkH,aAJnB,SAKI,mBAAG5G,MAAO,CAAEiG,SAAU,OAAQD,WAAY,QAA1C,SAAqDyD,gBAUtEG,UCxKf,MAAM9D,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAId,IAAoBZ,GAAhBkE,GAAI,GAAIC,GAAI,GAAOE,GAAU,GAAIC,GAAU,GAAIsB,GAAS,GAC5D,MAAMC,WAAc5H,YAEhBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAmB,EACnBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKyL,MAAQzL,KAAKyL,MAAMpK,KAAKrB,MAIjCyL,MAAM1C,GAEF,GADA/I,KAAKwK,aACW,IAAZX,GAAE,GAAG,GAAU,CACf,IAAI6B,EAAUf,KAAKC,MAAMD,KAAKE,UAAUhB,GAAE,KACtC8B,EAAa7B,GAAE,GACnBD,GAAE,GAAKA,GAAE,GACTA,GAAE,GAAK6B,EACP5B,GAAE,GAAKA,GAAE,GACTA,GAAE,GAAK6B,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAI7C,EAAG6C,IACnB,IAAK,IAAItJ,EAAIsJ,EAAI,EAAGtJ,EAAIyG,EAAGzG,IAAK,CAE5B,IADA,IAAIuJ,EAAShC,GAAEvH,GAAGsJ,GAAK/B,GAAE+B,GAAGA,GACnBd,EAAIc,EAAGd,EAAI/B,EAAG+B,IACnBjB,GAAEvH,GAAGwI,GAAKjB,GAAEvH,GAAGwI,GAAKe,EAAShC,GAAE+B,GAAGd,GAEtChB,GAAExH,GAAKwH,GAAExH,GAAKuJ,EAAS/B,GAAE8B,GAOjC,KAFAjG,GAAI,IAAItD,MAAM0G,IACZA,EAAI,GAAKe,GAAEf,EAAI,GAAKc,GAAEd,EAAI,GAAGA,EAAI,GAC9BzG,EAAIyG,EAAI,EAAGzG,GAAK,EAAGA,IAAK,CACzB,IAAIwG,EAAMgB,GAAExH,GACZ,IAAKwI,EAAIxI,EAAI,EAAGwI,EAAI/B,EAAG+B,IACnBhC,GAAYe,GAAEvH,GAAGwI,GAAKnF,GAAEmF,GAE5BnF,GAAErD,GAAKb,KAAKC,MAAMoH,EAAMe,GAAEvH,GAAGA,IAEjC,IAAKA,EAAI,EAAGA,EAAIyG,EAAGzG,IACfiJ,GAAOhE,KAAK,KAAOjF,EAAI,GAAK,MAAQqD,GAAErD,IACtCiJ,GAAOhE,KAAK,wBAGhBvH,KAAKgE,SAAS,CACVgD,gBAAgB,IAIxBgE,aAAab,EAAKC,GACdP,GAAI,GACJC,GAAI,GACJnE,GAAI,GACJqE,GAAU,GACVC,GAAU,GACVsB,GAAS,GACT,IAAK,IAAIjJ,EAAI,EAAGA,GAAK6H,EAAK7H,IAAK,CAC3B,IAAK,IAAIwI,EAAI,EAAGA,GAAKV,EAAQU,IACzBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,UACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAASwI,EAA0BM,YAAa,IAAM9I,EAASwI,GAA9C,IAAMxI,EAASwI,IAElDd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,QACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAAiB8I,YAAa,IAAM9I,GAA5B,IAAMA,IAKhCtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAKxBE,aACI,IAAK,IAAIlI,EAAI,EAAGA,EAAItC,KAAK6D,MAAMsG,IAAK7H,IAAK,CACrCuH,GAAEvH,GAAK,GACP,IAAK,IAAIwI,EAAI,EAAGA,EAAI9K,KAAK6D,MAAMuG,OAAQU,IACnCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAWwI,EAAI,IAAIjD,OAEhFiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAIuF,SAIjEX,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SACI,OACI,sBAAK3D,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,+BACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAOKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,eAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,IAAMnI,KAAKgL,aAAahL,KAAK6D,MAAMsG,IAAKnK,KAAK6D,MAAMuG,QAEnD9J,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,mBAIU,6BAKjBxF,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAON,GAC1B,4CAAc,0BAAYC,GAE1B,cAAC,IAAD,CACI/F,GAAG,gBACH5D,MAAO,CAAE+F,WAAY,OAAQb,MAAO,SACpC2C,QAAS,IAAMnI,KAAKyL,MAAMzL,KAAK6D,MAAMsG,KAHzC,4BAUhB,qBAAKpC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAAchD,GAAG,aAJpC,SAKI,mBAAG5D,MAAO,CAAEiG,SAAU,OAAQD,WAAY,QAA1C,SAAqDiF,gBAStEC,UCtLf,MAAMpF,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAId,IAAIsD,GAAI,GAAIC,GAAI,GAAIE,GAAU,GAAIC,GAAU,GAAIsB,GAAS,GACzD,MAAMO,WAAelI,YAEjBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAmB,EACnBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAK+L,OAAS/L,KAAK+L,OAAO1K,KAAKrB,MAInC+L,OAAOhD,GAEH,GADA/I,KAAKwK,aACW,IAAZX,GAAE,GAAG,GAAU,CACf,IAAI6B,EAAUf,KAAKC,MAAMD,KAAKE,UAAUhB,GAAE,KACtC8B,EAAa7B,GAAE,GACnBD,GAAE,GAAKA,GAAE,GACTA,GAAE,GAAK6B,EACP5B,GAAE,GAAKA,GAAE,GACTA,GAAE,GAAK6B,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAI7C,EAAG6C,IACnB,IAAK,IAAItJ,EAAIsJ,EAAI,EAAGtJ,EAAIyG,EAAGzG,IAAK,CAE5B,IADA,IAAIuJ,EAAShC,GAAEvH,GAAGsJ,GAAK/B,GAAE+B,GAAGA,GACnBd,EAAIc,EAAGd,EAAI/B,EAAG+B,IACnBjB,GAAEvH,GAAGwI,GAAKjB,GAAEvH,GAAGwI,GAAKe,EAAShC,GAAE+B,GAAGd,GAEtChB,GAAExH,GAAKwH,GAAExH,GAAKuJ,EAAS/B,GAAE8B,GAKjC,IAAKA,EAAI7C,EAAI,EAAG6C,GAAK,EAAGA,IACpB,IAAKtJ,EAAIsJ,EAAGtJ,GAAK,EAAGA,IAEhB,GAAIA,IAAMsJ,EAAG,CAGT,IAFAC,EAAS,EAAIhC,GAAEvH,GAAGsJ,GAEbd,EAAI,EAAGA,EAAI/B,EAAG+B,IACfjB,GAAEvH,GAAGwI,GAAKjB,GAAEvH,GAAGwI,GAAKe,EAExB/B,GAAExH,GAAKwH,GAAExH,GAAKuJ,MAIb,CAED,IADAA,EAAShC,GAAEvH,GAAGsJ,GAAK/B,GAAE+B,GAAGA,GACnBd,EAAI,EAAGA,EAAI/B,EAAG+B,IACfjB,GAAEvH,GAAGwI,GAAKjB,GAAEvH,GAAGwI,GAAKe,EAAShC,GAAE+B,GAAGd,GAEtChB,GAAExH,GAAKwH,GAAExH,GAAKuJ,EAAS/B,GAAE8B,GAIrC,IAAKtJ,EAAI,EAAGA,EAAIyG,EAAGzG,IACfiJ,GAAOhE,KAAKuC,GAAExH,IACdiJ,GAAOhE,KAAK,wBAEhBvH,KAAKgE,SAAS,CACVgD,gBAAgB,IAKxBgE,aAAab,EAAKC,GACd,IAAK,IAAI9H,EAAI,EAAGA,GAAK6H,EAAK7H,IAAK,CAC3B,IAAK,IAAIwI,EAAI,EAAGA,GAAKV,EAAQU,IACzBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,UACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAASwI,EAA0BM,YAAa,IAAM9I,EAASwI,GAA9C,IAAMxI,EAASwI,IAElDd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,QACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAAiB8I,YAAa,IAAM9I,GAA5B,IAAMA,IAKhCtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAKxBE,aACI,IAAK,IAAIlI,EAAI,EAAGA,EAAItC,KAAK6D,MAAMsG,IAAK7H,IAAK,CACrCuH,GAAEvH,GAAK,GACP,IAAK,IAAIwI,EAAI,EAAGA,EAAI9K,KAAK6D,MAAMuG,OAAQU,IACnCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAWwI,EAAI,IAAIjD,OAEhFiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAIuF,SAIjEX,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SAAU,IAAD,EACiBjE,KAAK6D,MAArBsG,EADD,EACCA,IAAKC,EADN,EACMA,OACX,OACI,sBAAK9J,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,iCACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAEsB,MAAO,IAAKyE,WAAY,UAAWb,MAAO,aACnDyC,SAAUjI,KAAKkH,aAHnB,UAMKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,eAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,IAAMnI,KAAKgL,aAAab,EAAKC,GAE7B9J,MAAO,CAAE+F,WAAY,UAAWb,MAAO,QAASe,SAAU,QAH9D,mBAIU,6BAKjBvG,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAON,GAC1B,4CAAc,0BAAYC,GAE1B,cAAC,IAAD,CACI/F,GAAG,gBACH5D,MAAO,CAAE+F,WAAY,OAAQb,MAAO,QAASe,SAAU,QACvD4B,QAAS,IAAMnI,KAAK+L,OAAO5B,GAH/B,4BAYhB,qBAAKpC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAEsB,MAAO,IAAKyE,WAAY,UAAWb,MAAO,YAAa8F,MAAO,QACvErD,SAAUjI,KAAKkH,aAAchD,GAAG,aAJpC,SAKI,mBAAG5D,MAAO,CAAEiG,SAAU,OAAQD,WAAY,QAA1C,SAAqDiF,gBAStEO,UC/Lf,MAAM1F,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAId,IAA6DwD,GAAzDF,GAAI,GAAIC,GAAI,GAAIE,GAAU,GAAIC,GAAU,GAAIsB,GAAS,GAEzD,MAAMS,WAAgBpI,YAElBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAmB,EACnBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKiM,QAAUjM,KAAKiM,QAAQ5K,KAAKrB,MAIrCiM,QAAQlD,GACJ/I,KAAKwK,aACL,IACIX,GAAIqC,aAAIrC,IACRE,GAASoC,aAAStC,GAAGC,IACrB,IAAK,IAAIxH,EAAI,EAAGA,EAAIyG,EAAGzG,IACnB,IAAK,IAAIwI,EAAI,EAAGA,EAAI/B,EAAG+B,IACdsB,OAAOC,UAAUxC,GAAEvH,GAAGwI,MACvBjB,GAAEvH,GAAGwI,GAAK9K,KAAKsM,cAAcC,aAAS1C,GAAEvH,GAAGwI,MAKvD,IAAKxI,EAAI,EAAGA,EAAIyG,EAAGzG,IAAK,CACpB,IAAKwI,EAAI,EAAGA,EAAI/B,EAAG+B,IACfS,GAAOhE,KAAKsC,GAAEvH,GAAGwI,IACjBS,GAAOhE,KAAK,MAEhBgE,GAAOhE,KAAK,yBAGlB,MAAOtB,GACLsF,GAAOhE,KAAK,6CAEhBvH,KAAKgE,SAAS,CACVgD,gBAAgB,IAIxBsF,cAAczE,GACV,OAAO2E,aAAO3E,EAAO,CAAE0E,SAAU,UAGrCvB,aAAab,EAAKC,GACd,IAAK,IAAI9H,EAAI,EAAGA,GAAK6H,EAAK7H,IAAK,CAC3B,IAAK,IAAIwI,EAAI,EAAGA,GAAKV,EAAQU,IACzBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,UACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAASwI,EAA0BM,YAAa,IAAM9I,EAASwI,GAA9C,IAAMxI,EAASwI,IAElDd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,QACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAAiB8I,YAAa,IAAM9I,GAA5B,IAAMA,IAKhCtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAKxBE,aACI,IAAK,IAAIlI,EAAI,EAAGA,EAAItC,KAAK6D,MAAMsG,IAAK7H,IAAK,CACrCuH,GAAEvH,GAAK,GACP,IAAK,IAAIwI,EAAI,EAAGA,EAAI9K,KAAK6D,MAAMuG,OAAQU,IACnCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAWwI,EAAI,IAAIjD,OAEhFiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAIuF,SAIjEX,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SACI,OACI,sBAAK3D,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,8BACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAMKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,eAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,IAAMnI,KAAKgL,aAAahL,KAAK6D,MAAMsG,IAAKnK,KAAK6D,MAAMuG,QAEnD9J,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,mBAIU,6BAKjBxF,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAON,GAC1B,4CAAc,0BAAYC,GAC1B,cAAC,IAAD,CACI/F,GAAG,gBACH5D,MAAO,CAAE+F,WAAY,OAAQb,MAAO,SACpC2C,QAAS,IAAMnI,KAAKiM,QAAQjM,KAAK6D,MAAMsG,KAH3C,4BAWhB,qBAAKpC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,eAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAAchD,GAAG,aAJpC,UAKI,mBAAG5D,MAAO,CAAEiG,SAAU,OAAQD,WAAY,QAA1C,SAAqDiF,KACrD,oBAAGjL,MAAO,CAAEiG,SAAU,OAAQD,WAAY,QAA1C,iBAAyDqE,KAAKE,UAAUd,mBASzFiC,UCzKf,MAAM5F,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAId,IAA6DkG,GAAzD5C,GAAI,GAAIC,GAAI,GAAIE,GAAU,GAAIC,GAAU,GAAIsB,GAAS,GACzD,MAAMmB,WAAW9I,YAEbiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAmB,EACnBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAK2M,GAAK3M,KAAK2M,GAAGtL,KAAKrB,MAI3B2M,KACI3M,KAAKwK,aACLiC,GAAYG,aAAQ/C,GAAGC,IACvB,IAAK,IAAIxH,EAAI,EAAGA,EAAImK,GAAUrJ,OAAQd,IAClCiJ,GAAOhE,KAAK9F,KAAKC,MAAM+K,GAAUnK,KACjCiJ,GAAOhE,KAAK,wBAEhBvH,KAAKgE,SAAS,CACVgD,gBAAgB,IAMxBsF,cAAczE,GACV,OAAO2E,aAAO3E,EAAO,CAAE0E,SAAU,UAGrCvB,aAAab,EAAKC,GACd,IAAK,IAAI9H,EAAI,EAAGA,GAAK6H,EAAK7H,IAAK,CAC3B,IAAK,IAAIwI,EAAI,EAAGA,GAAKV,EAAQU,IACzBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,UACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAASwI,EAA0BM,YAAa,IAAM9I,EAASwI,GAA9C,IAAMxI,EAASwI,IAElDd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAiB,QACjBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEZpC,GAAI,IAAM5B,EAAiB8I,YAAa,IAAM9I,GAA5B,IAAMA,IAKhCtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAKxBE,aACI,IAAK,IAAIlI,EAAI,EAAGA,EAAItC,KAAK6D,MAAMsG,IAAK7H,IAAK,CACrCuH,GAAEvH,GAAK,GACP,IAAK,IAAIwI,EAAI,EAAGA,EAAI9K,KAAK6D,MAAMuG,OAAQU,IACnCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAWwI,EAAI,IAAIjD,OAEhFiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAO/I,EAAI,IAAIuF,SAIjEX,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SACI,OACI,sBAAK3D,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAAEkF,MAAO,QAASc,WAAY,QAAzC,8BACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACIK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHnB,UAOKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,cAAC,IAAD,CACIlC,GAAG,gBACH5D,MAAO,CAAE+F,WAAY,OAAQb,MAAO,SACpC2C,QAAS,IAAMnI,KAAK2M,KAHxB,uBASP3M,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAON,GAC1B,4CAAc,0BAAYC,GAC1B,cAAC,IAAD,CAAQ/F,GAAG,mBAAmBiE,QAC1B,IAAMnI,KAAKgL,aAAahL,KAAK6D,MAAMsG,IAAKnK,KAAK6D,MAAMuG,QAEnD9J,MAAO,CAAE+F,WAAY,UAAWb,MAAO,SAH3C,4BAUhB,qBAAKuC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACIjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,YAAa8F,MAAO,QAC3DrD,SAAUjI,KAAKkH,aAAchD,GAAG,aAJpC,SAKI,mBAAG5D,MAAO,CAAEiG,SAAU,OAAQD,WAAY,QAA1C,SAAqDiF,gBAStEmB,UCxJf,MAAMtG,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAId,IAAIsD,GAAI,GAAIC,GAAI,GAAIE,GAAU,GAAIC,GAAU,GAAIsB,GAAS,GACzD,MAAMsB,WAAiBjJ,YAEnBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAoB,EACpBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAK8M,SAAW9M,KAAK8M,SAASzL,KAAKrB,MAIvC8M,SAAS/D,GACL/I,KAAKwK,aACL,IAAKhJ,EAAK,IAAIa,MAAM0G,GACflH,EAAK,IAAIQ,MAAM0G,GAEpB,GAAsB,IAAlBiB,GAAQ,GAAG,GACX,IAAK,IAAI1H,EAAE,EAAIA,EAAEyG,EAAIzG,IAAK,CACtB,IAAIyK,EAAOlD,GAAE,GAAGvH,GAChB0H,GAAQ,GAAG1H,GAAKwH,GAAExH,GAAGA,GACrB2H,GAAQ,GAAG3H,GAAKyK,EAGxB,IAAIC,EAAU,IAAI3K,MAAM0G,GACxB,IAAIzG,EAAE,EAAEA,EAAEyG,EAAEzG,IAAI,CACZ0K,EAAQ1K,GAAM,IAAID,MAAM0G,GACxB,IAAI,IAAI+B,EAAE,EAAEA,EAAE/B,EAAE+B,IACZkC,EAAQ1K,GAAGwI,GAAK,EAEpBtJ,EAAEc,GAAK,EACPT,EAAES,GAAK,EAEX0K,EAAQ,GAAG,GAAKvL,KAAKwL,KAAKjD,GAAQ,GAAG,IACrC,IAAI,IAAI4B,EAAE,EAAEA,EAAE7C,EAAE6C,IAAI,CAEhB,IAAItJ,EAAE,EAAEA,EAAEsJ,EAAEtJ,IAAI,CACZ,IAAIwG,EAAM,EACV,GAAO,IAAJxG,EACC,IAAIwI,EAAE,EAAEA,EAAExI,EAAEwI,IACRhC,GAAOkE,EAAQ1K,GAAGwI,GAAGkC,EAAQpB,GAAGd,GAIxCkC,EAAQpB,GAAGtJ,IAAK0H,GAAQ1H,GAAGsJ,GAAG9C,GAAKkE,EAAQ1K,GAAGA,GAGlD,IADAwG,EAAM,EACFgC,EAAE,EAAEA,EAAEc,EAAEd,IACRhC,GAAOkE,EAAQpB,GAAGd,GAAGkC,EAAQpB,GAAGd,GAEpCkC,EAAQpB,GAAGA,GAAKnK,KAAKwL,KAAKjD,GAAQ4B,GAAGA,GAAG9C,GAI5C,IADAjH,EAAE,GAAKoI,GAAQ,GAAG+C,EAAQ,GAAG,GACzB1K,EAAE,EAAEA,EAAEyG,EAAEzG,IAAI,CAEZ,IADAwG,EAAM,EACFgC,EAAE,EAAEA,EAAExI,EAAEwI,IACRhC,GAAOkE,EAAQ1K,GAAGwI,GAAGjJ,EAAEiJ,GAE3BjJ,EAAES,IAAM2H,GAAQ3H,GAAGwG,GAAKkE,EAAQ1K,GAAGA,GAIvC,IADAd,EAAEuH,EAAE,GAAKlH,EAAEkH,EAAE,GAAGiE,EAAQjE,EAAE,GAAGA,EAAE,GAC3BzG,EAAEtC,KAAK6D,MAAMsG,IAAI,EAAE7H,GAAG,EAAEA,IAAI,CAE5B,IADAwG,EAAM,EACFgC,EAAExI,EAAE,EAAEwI,EAAE9K,KAAK6D,MAAMsG,IAAIW,IACvBhC,GAAOkE,EAAQlC,GAAGxI,GAAGd,EAAEsJ,GAE3BtJ,EAAEc,IAAMT,EAAES,GAAGwG,GAAKkE,EAAQ1K,GAAGA,GAGjCtC,KAAKgE,SAAS,CACVgD,gBAAgB,IAGxBkG,UAAUC,EAAGvB,GAET,IADA,IAAI9C,EAAM,EACDxG,EAAE,EAAIA,EAAEgF,SAAStH,KAAK6D,MAAMsG,KAAO7H,IACxC,IAAK,IAAIwI,EAAE,EAAIA,EAAExI,EAAE,EAAIwI,IACnBhC,GAAMqE,EAAE7K,GAAGwI,GAAGqC,EAAEvB,GAAGd,GAG3B,OAAOhC,EAEXwD,cAAezE,GACX,OAAO2E,aAAO3E,EAAO,CAAE0E,SAAU,UAGrCvB,aAAab,EAAKC,GACd,IAAK,IAAI9H,EAAE,EAAIA,EAAE6H,EAAM7H,IAAK,CACxB,IAAK,IAAIwI,EAAE,EAAIA,EAAEV,EAASU,IACtBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,UAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,KAAK5B,EAAE,IAAOwI,EAAE,GAA6BM,YAAa,KAAK9I,EAAE,IAAOwI,EAAE,IAAjD,KAAKxI,EAAE,IAAOwI,EAAE,KAEjDd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,QAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,KAAK5B,EAAE,GAAoB8I,YAAa,KAAK9I,EAAE,IAA/B,KAAKA,EAAE,KAK/BtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAKxBE,aACI,IAAI,IAAIlI,EAAE,EAAIA,EAAEtC,KAAK6D,MAAMsG,IAAM7H,IAAK,CAClCuH,GAAEvH,GAAK,GACP,IAAI,IAAIwI,EAAE,EAAIA,EAAE9K,KAAK6D,MAAMuG,OAASU,IAChCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAOwI,EAAE,IAAIjD,OAEtEiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAIuF,SAI7DX,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SACI,OACI,sBAAK3D,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAACkF,MAAO,QAASc,WAAY,QAAxC,oCACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACAK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHf,UAOKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,eAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,IAAInI,KAAKgL,aAAahL,KAAK6D,MAAMsG,IAAKnK,KAAK6D,MAAMuG,QAEjD9J,MAAO,CAAC+F,WAAY,UAAWb,MAAO,QAASe,SAAU,QAH7D,mBAIU,6BAKjBvG,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAMN,GACzB,4CAAc,0BAAWC,GACzB,cAAC,IAAD,CACI/F,GAAG,gBACH5D,MAAO,CAAC+F,WAAY,OAAQb,MAAO,QAASe,SAAU,QACtD4B,QAAS,IAAInI,KAAK8M,SAAS9M,KAAK6D,MAAMsG,KAH1C,4BAYhB,qBAAKpC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACAjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAAehD,GAAG,aAJjC,SAKI,mBAAG5D,MAAO,CAACiG,SAAU,OAAQD,WAAY,QAAzC,SAAmDiF,gBASpEsB,UCrNf,MAAMzG,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAKd,IAAgD/E,GAAI4H,GAAhDS,GAAI,GAAIC,GAAI,GAAIE,GAAU,GAAIC,GAAU,GAAiBzD,GAAc,GAAI4G,GAAM,EAAGC,GAAU,GAC9F5G,GAAU,CACV,CACE1B,MAAO,YACP2B,UAAW,YACXC,IAAK,cAGX,MAAM2G,WAAe1J,YAEjBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAoB,EACpBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKuN,OAASvN,KAAKuN,OAAOlM,KAAKrB,MAKnCuN,OAAOxE,GAEH,IAAIgE,EACA5G,EAFJnG,KAAKwK,aAGLpB,GAAU,IAAI/G,MAAM0G,GACpB,EAAG,CACCgE,EAAO,GACP5G,EAAOwE,KAAKC,MAAMD,KAAKE,UAAUrJ,KACjC,IAAK,IAAIc,EAAE,EAAIA,EAAEyG,EAAIzG,IAAK,CAEtB,IADA,IAAIwG,EAAM,EACDgC,EAAE,EAAIA,EAAE/B,EAAI+B,IACbxI,IAAMwI,IACNhC,GAAYe,GAAEvH,GAAGwI,GAAGtJ,GAAEsJ,IAG9BiC,EAAKzK,IAAMwH,GAAExH,GAAKwG,GAAKe,GAAEvH,GAAGA,GAGhCd,GAAImJ,KAAKC,MAAMD,KAAKE,UAAUkC,UAC1B/M,KAAKiG,MAAMzE,GAAG2E,IAEtBnG,KAAKgE,SAAS,CACVgD,gBAAgB,IAKxBf,MAAMC,EAAMC,GACR,IAAK,IAAI7D,EAAE,EAAIA,EAAE4D,EAAK9C,OAASd,IAC3B8G,GAAQ9G,GAAKb,KAAK4B,KAAK6C,EAAK5D,GAAG6D,EAAK7D,IAAM4D,EAAK5D,IAGnD,IADAtC,KAAKwN,YAAYhM,GAAG4H,IACf9G,EAAE,EAAIA,EAAE8G,GAAQhG,OAASd,IAC1B,GAAI8G,GAAQ9G,GAAK,KACb,OAAO,EAGf,OAAO,EAEX0I,aAAab,EAAKC,GACdP,GAAI,GACJC,GAAI,GACJE,GAAU,GACVC,GAAU,GACVzI,GAAI,GACJgF,GAAc,GACd,IAAK,IAAIlE,EAAE,EAAIA,GAAG6H,EAAM7H,IAAK,CACzB,IAAK,IAAIwI,EAAE,EAAIA,GAAGV,EAASU,IACvBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,UAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAKwI,EAAoBM,YAAa,IAAI9I,EAAKwI,GAAlC,IAAIxI,EAAKwI,IAElCd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,QAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAe8I,YAAa,IAAI9I,GAAxB,IAAIA,IACpB+K,GAAQ9F,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,QAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAe8I,YAAa,IAAI9I,GAAxB,IAAIA,IAIxBtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAMxBE,aACI,IAAI,IAAIlI,EAAE,EAAIA,EAAEtC,KAAK6D,MAAMsG,IAAM7H,IAAK,CAClCuH,GAAEvH,GAAK,GACP,IAAI,IAAIwI,EAAE,EAAIA,EAAE9K,KAAK6D,MAAMuG,OAASU,IAChCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAOwI,EAAE,IAAIjD,OAEtEiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAIuF,QACrDrG,GAAE+F,KAAKzB,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAIuF,SAG7D4F,cAAc1E,GACV,IAAK,IAAIzG,EAAE,EAAIA,GAAGyG,EAAIzG,IAClBmE,GAAQc,KAAK,CACTxC,MAAO,IAAIzC,EACXoE,UAAW,IAAIpE,EACfqE,IAAK,IAAIrE,IAGjB,IAAKA,EAAE,EAAIA,GAAGyG,EAAIzG,IACdmE,GAAQc,KAAK,CACTxC,MAAO,QAAQzC,EACfoE,UAAW,QAAQpE,EACnBqE,IAAK,QAAQrE,IAIzBkL,YAAYhM,EAAGyE,GACX,IAAIyH,EAAM,GACVA,GAAO,iBAAmBN,KAAU,IACpC,IAAK,IAAI9K,EAAE,EAAIA,EAAEd,EAAE4B,OAASd,IACxBoL,GAAO,MAAMpL,EAAE,GAAG,MAAMd,EAAEc,GAAG0G,QAAQ,GAAG,YAAY1G,EAAE,GAAG,MAAQ2D,EAAM3D,GAAG0G,QAAQ,GAC9E1G,IAAMd,EAAE4B,OAAO,IACfsK,GAAO,KAGfA,GAAO,IACPlH,GAAYe,KAAKoD,KAAKC,MAAM8C,IAGhCxG,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SACI,OACI,sBAAK3D,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAACkF,MAAO,QAASc,WAAY,QAAxC,qCACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACAK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHf,UAMKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,eAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,KAAKnI,KAAKgL,aAAahL,KAAK6D,MAAMsG,IAAKnK,KAAK6D,MAAMuG,QAC9CpK,KAAKyN,cAAczN,KAAK6D,MAAMsG,MAElC7J,MAAO,CAAC+F,WAAY,UAAWb,MAAO,QAASe,SAAU,QAJ7D,mBAKU,6BAKjBvG,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAMN,GACzB,4CAAc,0BAAWC,GACzB,2CAAa,0BAAWoD,GACxB,cAAC,IAAD,CACInJ,GAAG,gBACH5D,MAAO,CAAC+F,WAAY,OAAQb,MAAO,QAASe,SAAU,QACtD4B,QAAS,IAAInI,KAAKuN,OAAOjG,SAAStH,KAAK6D,MAAMsG,MAHjD,4BAWhB,qBAAKpC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACAjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAACsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACrDtB,GAAG,aAJH,SAMI,cAAC,IAAD,CAAOuC,QAASA,GAAS2B,UAAQ,EAACC,WAAY7B,GAAa8B,UAAW,CAAChC,WAAY,OAAQC,SAAU,OAAQf,MAAO,QAASmI,UAAW,SAAUC,OAAO,gCAiB1KN,UC9Of,MAAMlH,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAId,IAAgD/E,GAAI4H,GAAhDS,GAAI,GAAIC,GAAI,GAAIE,GAAU,GAAIC,GAAU,GAAiBsB,GAAS,GAAI/E,GAAc,GAAI4G,GAAM,EAAGC,GAAU,GAC3G5G,GAAU,CACV,CACE1B,MAAO,YACP2B,UAAW,YACXC,IAAK,cAGX,MAAMkH,WAAejK,YAEjBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAoB,EACpBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAK8N,OAAS9N,KAAK8N,OAAOzM,KAAKrB,MAKnC8N,OAAO/E,GAGH,IAAI5C,EAFJnG,KAAKwK,aACLhJ,GAAI,IAAIa,MAAM0G,GAEdK,GAAU,IAAI/G,MAAM0G,GACpB,EAAG,CACC5C,EAAOwE,KAAKC,MAAMD,KAAKE,UAAUrJ,KACjC,IAAK,IAAIc,EAAE,EAAIA,EAAEyG,EAAIzG,IAAK,CAEtB,IADA,IAAIwG,EAAM,EACDgC,EAAE,EAAIA,EAAE/B,EAAI+B,IACbxI,IAAMwI,IACNhC,GAAYe,GAAEvH,GAAGwI,GAAGtJ,GAAEsJ,IAG9BtJ,GAAEc,IAAMwH,GAAExH,GAAKwG,GAAKe,GAAEvH,GAAGA,UAGzB2D,EAAMzE,GAAG2E,IAGjB,IAAK7D,EAAE,EAAIA,EAAEd,GAAE4B,OAASd,IAChBiJ,GAAOhE,KAAK/F,GAAEc,IACdiJ,GAAOhE,KAAK,wBAEpBvH,KAAKgE,SAAS,CACVgD,gBAAgB,IAKxBf,MAAMC,EAAMC,GACR,IAAK,IAAI7D,EAAE,EAAIA,EAAE4D,EAAK9C,OAASd,IAC3B8G,GAAQ9G,GAAKb,KAAK4B,KAAK6C,EAAK5D,GAAG6D,EAAK7D,IAAM4D,EAAK5D,IAGnD,IADAtC,KAAKwN,YAAYhM,GAAG4H,IACf9G,EAAE,EAAIA,EAAE8G,GAAQhG,OAASd,IAC1B,GAAI8G,GAAQ9G,GAAK,KACb,OAAO,EAGf,OAAO,EAEX0I,aAAab,EAAKC,GACdP,GAAI,GACJC,GAAI,GACJE,GAAU,GACVC,GAAU,GACVoD,GAAU,GACV7L,GAAI,GACJgF,GAAc,GACd,IAAK,IAAIlE,EAAE,EAAIA,GAAG6H,EAAM7H,IAAK,CACzB,IAAK,IAAIwI,EAAE,EAAIA,GAAGV,EAASU,IACvBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,UAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAKwI,EAAoBM,YAAa,IAAI9I,EAAKwI,GAAlC,IAAIxI,EAAKwI,IAElCd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,QAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAe8I,YAAa,IAAI9I,GAAxB,IAAIA,IACpB+K,GAAQ9F,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,QAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAe8I,YAAa,IAAI9I,GAAxB,IAAIA,IAKxBtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAMxBE,aACI,IAAI,IAAIlI,EAAE,EAAIA,EAAEtC,KAAK6D,MAAMsG,IAAM7H,IAAK,CAClCuH,GAAEvH,GAAK,GACP,IAAI,IAAIwI,EAAE,EAAIA,EAAE9K,KAAK6D,MAAMuG,OAASU,IAChCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAOwI,EAAE,IAAIjD,OAEtEiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAIuF,QACrDrG,GAAE+F,KAAKzB,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAIuF,SAG7D4F,cAAc1E,GACV,IAAK,IAAIzG,EAAE,EAAIA,GAAGyG,EAAIzG,IAClBmE,GAAQc,KAAK,CACTxC,MAAO,IAAIzC,EACXoE,UAAW,IAAIpE,EACfqE,IAAK,IAAIrE,IAGjB,IAAKA,EAAE,EAAIA,GAAGyG,EAAIzG,IACdmE,GAAQc,KAAK,CACTxC,MAAO,QAAQzC,EACfoE,UAAW,QAAQpE,EACnBqE,IAAK,QAAQrE,IAIzBkL,YAAYhM,EAAGyE,GACX,IAAIyH,EAAM,GACVA,GAAO,iBAAmBN,KAAU,IACpC,IAAK,IAAI9K,EAAE,EAAIA,EAAEd,EAAE4B,OAASd,IACxBoL,GAAO,MAAMpL,EAAE,GAAG,MAAMd,EAAEc,GAAG0G,QAAQ,GAAG,YAAY1G,EAAE,GAAG,MAAQ2D,EAAM3D,GAAG0G,QAAQ,GAC9E1G,IAAMd,EAAE4B,OAAO,IACfsK,GAAO,KAGfA,GAAO,IACPlH,GAAYe,KAAKoD,KAAKC,MAAM8C,IAGhCxG,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SACI,OACI,sBAAK3D,MAAO,CAAE+F,WAAY,QAASyB,QAAS,QAA5C,UACI,oBAAIxH,MAAO,CAACkF,MAAO,QAASc,WAAY,QAAxC,2CACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACAK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHf,UAKKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,cAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,KAAKnI,KAAKgL,aAAahL,KAAK6D,MAAMsG,IAAKnK,KAAK6D,MAAMuG,QAC9CpK,KAAKyN,cAAczN,KAAK6D,MAAMsG,MAElC7J,MAAO,CAAC+F,WAAY,UAAWb,MAAO,QAASe,SAAU,QAJ7D,uBAUPvG,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAMN,GACzB,4CAAc,0BAAWC,GACzB,2CAAa,0BAAWoD,GACxB,cAAC,IAAD,CACInJ,GAAG,gBACH5D,MAAO,CAAC+F,WAAY,OAAQb,MAAO,QAASe,SAAU,QACtD4B,QAAS,IAAInI,KAAK8N,OAAOxG,SAAStH,KAAK6D,MAAMsG,MAHjD,4BAWhB,qBAAKpC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,cAAC,IAAD,CACAjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAACsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACrDtB,GAAG,aAJH,SAMI,cAAC,IAAD,CAAOuC,QAASA,GAAS4B,WAAY7B,GAAa4B,UAAU,EAAME,UAAW,CAAChC,WAAY,OAAQC,SAAU,OAAQf,MAAO,QAASmI,UAAW,uBAkBhKE,UCnPf,MAAMzH,GAAa,CACfC,WAAY,UACZb,MAAO,QACPc,WAAY,OACZC,SAAU,QAId,IAA+D/E,GAAI4H,GAAoCmC,GAAnG1B,GAAI,GAAIC,GAAI,GAAIE,GAAU,GAAIC,GAAU,GAAIoD,GAAU,GAAkB7G,GAAc,GAAI4G,GAAM,EAChG3G,GAAU,CACV,CACE1B,MAAO,YACP2B,UAAW,YACXC,IAAK,aAEP,CACI5B,MAAO,SACP2B,UAAW,SACXC,IAAK,UAET,CACI5B,MAAO,MACP2B,UAAW,IACXC,IAAK,KAET,CACI5B,MAAO,QACP2B,UAAW,QACXC,IAAK,UAGb,MAAMoH,WAAiBnK,YACnBiD,cACIC,QACA9G,KAAK6D,MAAQ,CACTsG,IAAK,EACLC,OAAQ,EACRC,mBAAoB,EACpBC,gBAAgB,EAChBtD,gBAAgB,GAEpBhH,KAAKkH,aAAelH,KAAKkH,aAAa7F,KAAKrB,MAC3CA,KAAKgO,mBAAqBhO,KAAKgO,mBAAmB3M,KAAKrB,MAG3DiO,kBAAkBC,GAEd,IADA,IAAIC,EAAa,GACR7L,EAAE,EAAIA,EAAE4L,EAAY5L,IAAK,CAC9B6L,EAAW7L,GAAK,GAChB,IAAK,IAAIwI,EAAE,EAAIA,EAAEoD,EAAYpD,IACzBqD,EAAW7L,GAAGwI,GAAKjB,GAAEvH,GAAGwI,GAGhC,QAAIC,aAAIoD,IAAe,KAGnBD,IAAclO,KAAK6D,MAAMsG,IAAI,GACtBnK,KAAKiO,oBAAoBC,IAKxCF,qBAEI,GADAhO,KAAKwK,cACAxK,KAAKiO,kBAAkB,GAKxB,OAJA1C,GAAS,wCACTvL,KAAKgE,SAAS,CACVgD,gBAAgB,KAEb,EAGX,IAAIoH,EAAIC,aAASlC,aAAStC,GAAErI,IAAIsI,IAChC1C,QAAQC,IAAI+G,GAEZ,IAAIE,EAAInC,aAASiC,GAAI,GACrBhH,QAAQC,IAAIiH,GACZ,EAAG,CAEC,IAAIC,EAAKpC,aAASA,aAASqC,aAAUF,GAAIF,IAAK,GACrCjC,aAASA,aAASqC,aAAUF,GAAIzE,IAAIyE,GAC7ClH,QAAQC,IAAIkH,GAIZ/M,GAAIiN,YAAIjN,GAAG2K,aAASoC,EAAGD,IACvBlH,QAAQC,IAAI7F,IAEZ4M,EAAIC,aAASlC,aAAStC,GAAGrI,IAAIsI,IAC7B1C,QAAQC,IAAI+G,GAEZhF,GAAU3H,KAAKwL,KAAKd,aAASqC,aAAUJ,GAAIA,IAAIpF,QAAQ,GACvDhJ,KAAKwN,YAAYe,EAAG5D,KAAKE,UAAUrJ,IAAGkN,MAAM,KAAKC,KAAK,OAAQvF,IAC9DhC,QAAQC,IAAI+B,IACZ,IAAIwF,EAAKzC,aAASA,aAASqC,aAAUJ,GAAIvE,IAAIyE,GACrCnC,aAASqC,aAAUF,GAAInC,aAAStC,GAAGyE,IAAItF,QAAQ,GACvD5B,QAAQC,IAAIuH,GACZN,EAAIG,YAAItC,aAASiC,GAAI,GAAIjC,aAASyC,EAAGN,IACrClH,QAAQC,IAAIiH,SACRlF,GAAU,MAClBmC,GAAS/J,GACTxB,KAAKgE,SAAS,CACVgD,gBAAgB,IAKxBgE,aAAab,EAAKC,GACdP,GAAI,GACJC,GAAI,GACJE,GAAU,GACVC,GAAU,GACVoD,GAAU,GACV7L,GAAI,GACJgF,GAAc,GACd,IAAK,IAAIlE,EAAE,EAAIA,GAAG6H,EAAM7H,IAAK,CACzB,IAAK,IAAIwI,EAAE,EAAIA,GAAGV,EAASU,IACvBd,GAAQzC,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,UAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAKwI,EAAoBM,YAAa,IAAI9I,EAAKwI,GAAlC,IAAIxI,EAAKwI,IAElCd,GAAQzC,KAAK,wBACb0C,GAAQ1C,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,QAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAe8I,YAAa,IAAI9I,GAAxB,IAAIA,IACpB+K,GAAQ9F,KAAK,cAAC,IAAD,CAAOjH,MAAO,CACvBsB,MAAO,MACPE,OAAQ,MACRmJ,gBAAgB,QAChBC,gBAAiB,KACjBC,eAAgB,KAChB3F,MAAO,QACPe,SAAU,OACVD,WAAY,QAEhBpC,GAAI,IAAI5B,EAAe8I,YAAa,IAAI9I,GAAxB,IAAIA,IAKxBtC,KAAKgE,SAAS,CACVqG,mBAAmB,EACnBC,gBAAgB,IAMxBE,aACI,IAAI,IAAIlI,EAAE,EAAIA,EAAEtC,KAAK6D,MAAMsG,IAAM7H,IAAK,CAClCuH,GAAEvH,GAAK,GACP,IAAI,IAAIwI,EAAE,EAAIA,EAAE9K,KAAK6D,MAAMuG,OAASU,IAChCjB,GAAEvH,GAAGwI,GAAMhF,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAOwI,EAAE,IAAIjD,OAEtEiC,GAAEvC,KAAKzB,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAIuF,QACrDrG,GAAE+F,KAAKzB,WAAW5F,SAASmL,eAAe,KAAK/I,EAAE,IAAIuF,SAG7D2F,YAAYqB,EAAQrN,EAAGyE,GAClBO,GAAYe,KAAK,CACbE,UAAW2F,KACXyB,OAAQA,EACRlJ,EAAGnE,EACHyE,MAAOA,IAIhBiB,aAAaQ,GACT1H,KAAKgE,SAAS,CACV,CAAC0D,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,QAG1C5D,SACI,OACI,sBAAK3D,MAAO,CAAE+F,WAAY,QAASyB,QAAS,OAAQwD,MAAM,QAA1D,UACI,oBAAIhL,MAAO,CAACkF,MAAO,QAASc,WAAY,QAAxC,iDACA,sBAAKyB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,eAAC,IAAD,CACAK,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAHf,UAMKlH,KAAK6D,MAAMwG,mBACR,gCACI,qCAAY,cAAC,IAAD,CAAOnC,KAAK,QAAQN,KAAK,MAAMtH,MAAO8F,KAClD,wCAAe,cAAC,IAAD,CAAO8B,KAAK,QAAQN,KAAK,SAAStH,MAAO8F,KACxD,cAAC,IAAD,CAAQlC,GAAG,mBAAmBiE,QAC1B,KAAKnI,KAAKgL,aAAahL,KAAK6D,MAAMsG,IAAKnK,KAAK6D,MAAMuG,SAElD9J,MAAO,CAAC+F,WAAY,UAAWb,MAAO,SAH1C,uBASPxF,KAAK6D,MAAMyG,gBACR,gCACI,4CAAmB,uBAAMN,GACzB,4CAAc,0BAAWC,GACzB,2CAAa,0BAAWoD,GACxB,cAAC,IAAD,CACInJ,GAAG,gBACH5D,MAAO,CAAC+F,WAAY,OAAQb,MAAO,SACnC2C,QAAS,IAAInI,KAAKgO,mBAAmB1G,SAAStH,KAAK6D,MAAMsG,MAH7D,4BAWhB,qBAAKpC,UAAU,MAAf,SACK/H,KAAK6D,MAAMmD,gBACR,gCACI,cAAC,IAAD,CACAjC,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAAE+F,WAAY,UAAWb,MAAO,aACvCyC,SAAUjI,KAAKkH,aAAehD,GAAG,aAJjC,SAKI,mBAAG5D,MAAO,CAACiG,SAAU,OAAQD,WAAY,QAAzC,SAAmDqE,KAAKE,UAAUU,QAEtE,cAAC,IAAD,CACAxG,MAAO,SACPqD,UAAU,EACV9H,MAAO,CAACsB,MAAO,OAAQyE,WAAY,UAAWb,MAAO,aACrDtB,GAAG,aAJH,SAMI,cAAC,IAAD,CAAOuC,QAASA,GAAS4B,WAAY7B,GAAa4B,UAAU,EAAME,UAAW,CAAChC,WAAY,OAAQC,SAAU,OAAQf,MAAO,QAASmI,UAAW,0BAqBpKI,U,MCtOPe,GAAYC,IAAZD,QACAE,GAAmCC,IAAnCD,OAAQE,GAA2BD,IAA3BC,QAASC,GAAkBF,IAAlBE,MAAOC,GAAWH,IAAXG,OAEhC,MAAMC,WAAYzL,YAEhBK,SACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC+K,GAAD,CAAQjH,UAAU,SAASzH,MAAO,CAAEwB,OAAQ,QAA5C,SACE,sBAAKiG,UAAU,aAAf,UACE,cAACuH,EAAA,EAAD,CAAYhP,MAAO,CAAEkF,MAAO,QAASe,SAAU,SAC/C,uBAAOwB,UAAU,aAAjB,+CAIJ,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAACoH,GAAD,CAAOvN,MAAO,IAAKtB,MAAO,CAAE+F,WAAY,QAAxC,SACE,eAAC,IAAD,CACEkJ,KAAK,SACLjP,MAAO,CAAEwB,OAAQ,OAAQ0N,YAAa,EAAGvE,gBAAiB,UAAWwE,UAAW,UAChFC,MAAM,OAHR,UAKE,eAACZ,GAAD,CAA4B/J,MAAO,oDAAnC,UACE,cAAC,IAAK4K,KAAN,UAAiC,cAAC,IAAD,CAAMC,GAAG,aAAT,wBAAlB,kBACf,cAAC,IAAKD,KAAN,UAAiC,cAAC,IAAD,CAAMC,GAAG,aAAT,wBAAlB,kBACf,cAAC,IAAKD,KAAN,UAA4B,cAAC,IAAD,CAAMC,GAAG,kBAAT,6BAAb,cACf,cAAC,IAAKD,KAAN,UAA+B,cAAC,IAAD,CAAMC,GAAG,aAAT,kCAAhB,iBACf,cAAC,IAAKD,KAAN,UAA6B,cAAC,IAAD,CAAMC,GAAG,kBAAT,6BAAd,eACf,cAAC,IAAKD,KAAN,UAA6B,cAAC,IAAD,CAAMC,GAAG,UAAT,4BAAd,iBANJ,gBAQb,eAACd,GAAD,CAA+B/J,MAAO,kDAAtC,UACE,cAAC,IAAK4K,KAAN,UAA6B,cAAC,IAAD,CAAMC,GAAG,UAAT,4BAAd,eACf,cAAC,IAAKD,KAAN,UAA4B,cAAC,IAAD,CAAMC,GAAG,SAAT,kCAAb,cACf,cAAC,IAAKD,KAAN,UAA6B,cAAC,IAAD,CAAMC,GAAG,UAAT,kCAAd,eACf,cAAC,IAAKD,KAAN,UAA8B,cAAC,IAAD,CAAMC,GAAG,WAAT,+BAAf,gBACf,cAAC,IAAKD,KAAN,UAAyB,cAAC,IAAD,CAAMC,GAAG,MAAT,+BAAV,WACf,cAAC,IAAKD,KAAN,UAA+B,cAAC,IAAD,CAAMC,GAAG,YAAT,qCAAhB,iBACf,cAAC,IAAKD,KAAN,UAA6B,cAAC,IAAD,CAAMC,GAAG,UAAT,sCAAd,eACf,cAAC,IAAKD,KAAN,UAA6B,cAAC,IAAD,CAAMC,GAAG,UAAT,qCAAd,eACf,cAAC,IAAKD,KAAN,UAA+B,cAAC,IAAD,CAAMC,GAAG,sBAAT,wCAAhB,mBATJ,mBAWb,eAACd,GAAD,CAAmC/J,MAAO,iDAA1C,UACE,cAAC,IAAK4K,KAAN,sCAAe,eACf,cAAC,IAAKA,KAAN,sBAAe,iBACf,cAAC,IAAKA,KAAN,oBAAe,iBAHJ,uBAKb,eAACb,GAAD,CAAkC/J,MAAO,4DAAzC,UACE,cAAC,IAAK4K,KAAN,+BAAe,eACf,cAAC,IAAKA,KAAN,mCAAe,aACf,cAAC,IAAKA,KAAN,wCAAe,mBAHJ,sBAKb,eAACb,GAAD,CAAiC/J,MAAO,+CAAxC,UACE,cAAC,IAAK4K,KAAN,wCAAe,4BACf,cAAC,IAAKA,KAAN,sCAAe,2BAFJ,qBAIb,eAACb,GAAD,CAA4B/J,MAAO,mDAAnC,UACE,cAAC,IAAK4K,KAAN,8CAAe,iBACf,cAAC,IAAKA,KAAN,+CAAe,kBACf,eAAC,IAAKA,KAAN,6CAA+D,oCAA/D,MAAe,iBACf,eAAC,IAAKA,KAAN,6CAAgE,oCAAhE,MAAe,kBACf,eAAC,IAAKA,KAAN,8CAAkE,oCAAlE,MAAe,mBACf,eAAC,IAAKA,KAAN,6CAAgE,oCAAhE,MAAe,oBANJ,gBAQb,eAACb,GAAD,CAA0B/J,MAAO,kEAAjC,UACE,cAAC,IAAK4K,KAAN,4BAAe,cACf,cAAC,IAAKA,KAAN,2BAAe,aACf,cAAC,IAAKA,KAAN,qCAAe,mBAHJ,mBAOjB,cAAC,IAAD,CAAQrP,MAAO,CAAEwH,QAAS,eAA1B,SACE,cAACoH,GAAD,CAAS5O,MAAO,CAAEwH,QAAS,GAAI+H,OAAQ,EAAGC,UAAW,KAArD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWrJ,IAC1C,cAAC,IAAD,CAAOmJ,OAAK,EAACC,KAAK,aAAaC,UAAW1H,IAC1C,cAAC,IAAD,CAAOwH,OAAK,EAACC,KAAK,kBAAkBC,UAAWhH,IAC/C,cAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,aAAaC,UAAW5G,IAC1C,cAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,kBAAkBC,UAAWzG,KAC/C,cAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,UAAUC,UAAWvG,KACvC,cAAC,IAAD,CAAOqG,OAAK,EAACC,KAAK,UAAUC,UAAW/F,KACvC,cAAC,IAAD,CAAO6F,OAAK,EAACC,KAAK,SAASC,UAAWzE,KACtC,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,UAAUC,UAAWnE,KACvC,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,WAAWC,UAAWjE,KACxC,cAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,MAAMC,UAAWvD,KACnC,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,YAAYC,UAAWpD,KACzC,cAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,UAAUC,UAAW3C,KACvC,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,UAAUC,UAAWpC,KACvC,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,sBAAsBC,UAAWlC,eAK3D,cAACqB,GAAD,CAAQ9O,MAAO,CAAE2K,gBAAiB,UAAW6E,UAAW,KAAxD,SACE,oBAAGxP,MAAO,CAAEiG,SAAU,OAAQD,WAAY,OAAQd,MAAO,SAAzD,oCACsB,uBACpB,cAAC0K,EAAA,EAAD,CAAgB5P,MAAO,CAAEiG,SAAU,UAAY,mBAAGoB,OAAO,SAASwI,IAAI,sBAAsBC,KAAK,qCAAqC9P,MAAO,CAAEkF,MAAO,QAAS6K,eAAgB,QAAhI,kDAC/C,oBAAG/P,MAAO,CAAEiG,SAAU,OAAQD,WAAY,OAAQd,MAAO,SAAzD,UACE,cAAC8K,EAAA,EAAD,CAAYhQ,MAAO,CAAEiG,SAAU,UADjC,wHAYC8I,UClJfkB,IAAStM,OACP,cAAC,IAAMuM,WAAP,UACE,cAAC,GAAD,MAEFtQ,SAASmL,eAAe,U","file":"static/js/main.12571b06.chunk.js","sourcesContent":["(function(window, sf) {\r\n\r\n    if (typeof module !== 'undefined') module.exports = sf()\r\n    else window.Starfield = sf()\r\n  \r\n  })(this, function() {\r\n\r\n\r\n\r\n  function Starfield(config) {\r\n    config = config || {}\r\n  \r\n    this.canvas = typeof config.canvas === 'string' ?\r\n      document.querySelector(config.canvas) :\r\n      config.canvas\r\n    this.ctx = this.canvas.getContext('2d')\r\n    this.style = getComputedStyle(this.canvas)\r\n  \r\n    this.vx = config.vx || 0.05\r\n    this.vy = config.vy || 0.05\r\n  \r\n    this.maxStars = config.numStars || 500\r\n    this.maxRadius = config.maxRadius || 1.5\r\n  \r\n    this.shootingStarInterval = config.shootingStarInterval\r\n    this.lastShootingStar = this.shootingStarInterval ? performance.now() : undefined\r\n    //this.shootingStar\r\n  \r\n    this.onResize()\r\n  \r\n    window.addEventListener('resize', this.onResize.bind(this))\r\n  }\r\n  \r\n  Starfield.prototype.star = function() {\r\n    return {\r\n      x: Math.round(Math.random() * this.canvas.width),\r\n      y: Math.round(Math.random() * this.canvas.height),\r\n      r: 0.5 + (Math.random() * this.maxRadius),\r\n      l: Math.random(),\r\n      bl: 0.1 * (Math.random() * 6 + 2),\r\n      dl: Math.round(Math.random()) === 1? 0.01: -0.01\r\n    }\r\n  }\r\n  \r\n  Starfield.prototype.loadStars = function() {\r\n    this.stars = new Array(this.numStars)\r\n  \r\n    var i = this.numStars\r\n    while (i-- > 0) this.stars[i] = this.star()\r\n  }\r\n  \r\n  Starfield.prototype.onResize = function() {\r\n    var ratio = window.devicePixelRatio || 1\r\n  \r\n    this.canvas.width = this.style.width.replace('px', '') | 0 * ratio\r\n    this.canvas.height = this.style.height.replace('px', '') | 0 * ratio\r\n  \r\n    if (this.canvas.width / ratio < 500) this.numStars = 100\r\n    else this.numStars = this.maxStars\r\n  \r\n    this.loadStars()\r\n  }\r\n  \r\n  Starfield.prototype.draw = function(star) {\r\n    this.ctx.beginPath()\r\n    this.ctx.fillStyle = 'rgba(255,255,255,' + star.l + ')' \r\n    this.ctx.arc(star.x, star.y, star.r, 0, 2 * Math.PI, false)\r\n    this.ctx.fill()\r\n  }\r\n  \r\n  Starfield.prototype.start = function() {\r\n    var tick = function(timeStamp) {\r\n  \r\n      this.ctx.fillStyle = 'black' \r\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\r\n  \r\n      var i = this.stars.length\r\n      while (i-- > 0) {\r\n        var star = this.stars[i]\r\n  \r\n        this.draw(star)\r\n        \r\n        star.y += this.vy\r\n        star.x += this.vx\r\n        star.l += star.dl\r\n  \r\n        if (Math.abs(star.l - star.bl) >= 0.25) star.dl = -star.dl\r\n        if (star.x > this.canvas.width) star.x = this.vx > 0? -1: this.canvas.width + 1\r\n        if (star.y > this.canvas.height) star.y = this.vy > 0? -1: this.canvas.height + 1\r\n      }\r\n  \r\n      if (this.shootingStar) {\r\n        star = this.shootingStar\r\n  \r\n        this.draw(star)\r\n        \r\n        star.y += 3\r\n        star.x += 7\r\n        star.l += star.dl\r\n        star.r -= 0.06\r\n  \r\n        if (star.r <= 0) this.shootingStar = undefined\r\n  \r\n      } else if (this.shootingStarInterval) {\r\n  \r\n        if (timeStamp - this.lastShootingStar >= this.shootingStarInterval) {\r\n          this.shootingStar = this.star()\r\n          this.lastShootingStar = timeStamp\r\n          this.shootingStar.r = 3\r\n        }\r\n      }\r\n  \r\n      this.frameId = window.requestAnimationFrame(tick)\r\n  \r\n    }.bind(this)\r\n    \r\n    this.frameId = window.requestAnimationFrame(tick)\r\n  }\r\n  \r\n  return Starfield\r\n  \r\n  })\r\n","import React, { Component } from 'react';\r\nimport Starfield from './canvas-starfield';\r\n\r\nclass StarfieldCanvas extends Component {\r\n\tstate = {\r\n\t\tstarfield: null\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tconst starfield = new Starfield({\r\n\t\t\tcanvas: '#starfield',\r\n\t\t\tnumStars: 400,\r\n\t\t\tmaxRadius: 2,\r\n\t\t\tshootingStarInterval: 3\r\n\t\t});\r\n\t\tstarfield.start();\r\n\t\tthis.setState((state) => ({ starfield }));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<canvas\r\n\t\t\t\tid=\"starfield\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tzIndex: -1,\r\n\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tmaxWidth:'100vw',\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\topacity: 0.97\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default StarfieldCanvas;","import React, { Component } from 'react'\r\nimport { range, compile } from 'mathjs';\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport default class Graph extends Component {\r\n    render() {\r\n        let { fx, title } = this.props;\r\n        return (\r\n            <Plot\r\n                data={[\r\n                    {\r\n                        x: range(-10, 10, 0.5).toArray(),\r\n                        y: range(-10, 10, 0.5).toArray().map(function (x) {\r\n                            return compile(fx).evaluate({ x: x })\r\n                        }),\r\n                        type: 'scatter',\r\n                        marker: { color: 'red' },\r\n                    },\r\n                ]}\r\n                layout={{ title: title }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import { compile, derivative } from 'mathjs';\r\nconst func = (fx, X) => {\r\n    var expr = compile(fx); // f(x)\r\n    let scope = { x: parseFloat(X) }; //f(x) ; x=input\r\n    return expr.evaluate(scope);\r\n}\r\nconst funcDiff = (X) => {\r\n    var expr = derivative(X, 'x');\r\n    let scope = {x:parseFloat(X)};\r\n    return expr.evaluate(scope); \r\n}\r\nconst error = (xnew, xold) => {\r\n    return Math.abs((xnew - xold) / xnew);\r\n}\r\n\r\nexport { func, funcDiff, error };","import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport Graph from '../../components/Graph';\r\nimport { func } from '../../services/Services';\r\n\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar dataInTable;\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Y\",\r\n        key: \"y\",\r\n        dataIndex: \"y\"\r\n    }\r\n];\r\n\r\nclass Graphical extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            start: 0,\r\n            finish: 0,\r\n            showOutputCard: false,\r\n            showGraph: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.graphical = this.graphical.bind(this);\r\n    }\r\n\r\n    graphical() {\r\n        var data = []\r\n        data['x'] = []\r\n        data['y'] = []\r\n        console.log(typeof (this.state.start))\r\n        for (var i = parseInt(this.state.start); i <= parseInt(this.state.finish); i++) {\r\n            data['x'].push(i);\r\n            data['y'].push(func(i));\r\n\r\n        }\r\n\r\n\r\n        this.createTable(data['x'], data['y']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createTable(x, y) {\r\n        dataInTable = []\r\n        for (var i = 0; i <= parseInt(this.state.finish - this.state.start); i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                x: x[i],\r\n                y: y[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        let { fx, start, finish } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Graphical</h2>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            style={{ background: \"#001529\", color: \"#FFFFFFFF\", borderRadius:\"10px\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <h4>f(x)</h4><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h4>Start</h4><Input size=\"large\" name=\"start\" style={InputStyle}></Input>\r\n                            <h4>Finish</h4><Input size=\"large\" name=\"finish\" style={InputStyle}></Input><br /><br />\r\n                            <Button id=\"submit_button\" onClick={\r\n                                () => this.graphical(parseFloat(start), parseFloat(finish))\r\n                            }\r\n                                style={{ background: \"#4caf50\", color: \"white\"}}>Submit</Button>\r\n\r\n                        </Card>                        \r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx}  title=\"Graphical Method\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\r\n                        </Card>\r\n                    }                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Graphical;","import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { error, func } from '../../services/Services';\r\nimport Graph from '../../components/Graph';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar dataInTable = []\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"XL\",\r\n        dataIndex: \"xl\",\r\n        key: \"xl\"\r\n    },\r\n    {\r\n        title: \"XR\",\r\n        dataIndex: \"xr\",\r\n        key: \"xr\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass Bisection extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            xl: 0,\r\n            xr: 0,\r\n            showOutputCard: false,\r\n            showGraph: false,\r\n            moveLeft: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.bisection = this.bisection.bind(this);\r\n    }\r\n\r\n    bisection(xl, xr) {\r\n        var increaseFunction = false;\r\n        var xm = 0;\r\n        var sum = parseFloat(0.000000);\r\n        var n = 0;\r\n        var data = []\r\n        data['xl'] = []\r\n        data['xr'] = []\r\n        data['x'] = []\r\n        data['error'] = []\r\n        if (func(xl) < func(xr)) {\r\n            increaseFunction = true;\r\n        }\r\n\r\n        do {\r\n            xm = (xl + xr) / 2;\r\n            if (func(xm) * func(xr) < 0) {\r\n                sum = error(xm, xr);\r\n                if (increaseFunction) {\r\n                    xl = xm;\r\n                }\r\n                else {\r\n                    xr = xm;\r\n                }\r\n\r\n            }\r\n            else {\r\n                sum = error(xm, xl);\r\n                if (increaseFunction) {\r\n                    xr = xm;\r\n                }\r\n                else {\r\n                    xl = xm;\r\n                }\r\n            }\r\n            data['xl'][n] = xl;\r\n            data['xr'][n] = xr;\r\n            data['x'][n] = xm.toFixed(8);\r\n            data['error'][n] = Math.abs(sum).toFixed(8);\r\n            n++;\r\n        } while (Math.abs(sum) > 0.000001);\r\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createTable(xl, xr, x, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < xl.length; i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                xl: xl[i],\r\n                xr: xr[i],\r\n                x: x[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n    }\r\n    render() {\r\n        let { fx, xl, xr } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Bisection</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#001529\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                            id=\"inputCard\"\r\n                        >\r\n                            <h2 style={{color:\"white\"}}>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h2 style={{color:\"white\"}}>X<sub>L</sub></h2><Input size=\"large\" name=\"xl\" style={InputStyle}></Input>\r\n                            <h2 style={{color:\"white\"}}>X<sub>R</sub></h2><Input size=\"large\" name=\"xr\" style={InputStyle}></Input><br /><br />\r\n                            <Button id=\"submit_button\" onClick={\r\n                                () => this.bisection(parseFloat(xl), parseFloat(xr))\r\n                            }\r\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx} title=\"Bisection Method\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\r\n                        </Card>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Bisection;","import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { error, func } from '../../services/Services';\r\nimport Graph from '../../components/Graph';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar dataInTable = []\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"XL\",\r\n        dataIndex: \"xl\",\r\n        key: \"xl\"\r\n    },\r\n    {\r\n        title: \"XR\",\r\n        dataIndex: \"xr\",\r\n        key: \"xr\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass FalsePosition extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            xl: 0,\r\n            xr: 0,\r\n            showOutputCard: false,\r\n            showGraph: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.false_position = this.false_position.bind(this);\r\n    }\r\n\r\n    false_position(xl, xr) {\r\n        var increaseFunction = false;\r\n        var xi = 0;\r\n        var epsilon = parseFloat(0.000000);\r\n        var n = 0;\r\n        var data = []\r\n        data['xl'] = []\r\n        data['xr'] = []\r\n        data['x'] = []\r\n        data['error'] = []\r\n        if (func(xl) < func(xr)) {\r\n            increaseFunction = true;\r\n        }\r\n        do {\r\n            xi = (xl * func(xr) - xr * func(xl)) / (func(xr) - func(xl));\r\n            if (func(xi) * func(xr) < 0) {\r\n                epsilon = error(xi, xr);\r\n                if (increaseFunction) {\r\n                    xl = xi;\r\n                }\r\n                else {\r\n                    xr = xi;\r\n                }\r\n\r\n            }\r\n            else {\r\n                epsilon = error(xi, xl);\r\n                if (increaseFunction) {\r\n                    xr = xi;\r\n                }\r\n                else {\r\n                    xl = xi;\r\n                }\r\n\r\n            }\r\n            data['xl'][n] = xl;\r\n            data['xr'][n] = xr;\r\n            data['x'][n] = xi.toFixed(8);\r\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\r\n            n++;\r\n\r\n        } while (Math.abs(epsilon) > 0.000001);\r\n\r\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createTable(xl, xr, x, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < xl.length; i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                xl: xl[i],\r\n                xr: xr[i],\r\n                x: x[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        let { fx, xl, xr } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>False Position</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#001529\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h2>X<sub>L</sub></h2><Input size=\"large\" name=\"xl\" style={InputStyle}></Input>\r\n                            <h2>X<sub>R</sub></h2><Input size=\"large\" name=\"xr\" style={InputStyle}></Input><br /><br />\r\n                            <Button id=\"submit_button\" onClick={\r\n                                () => this.false_position(parseFloat(xl), parseFloat(xr))\r\n                            }\r\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx} title=\"False Position\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\r\n                            ></Table>\r\n                        </Card>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default FalsePosition;","import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { error, func } from '../../services/Services';\r\nimport Graph from '../../components/Graph';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar dataInTable = []\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass Onepoint extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            x0: 0,\r\n            showOutputCard: false,\r\n            showGraph: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onepoint = this.onepoint.bind(this);\r\n    }\r\n    onepoint(xold) {\r\n        var xnew = 0;\r\n        var epsilon = parseFloat(0.000000);\r\n        var n = 0;\r\n        var data = []\r\n        data['x'] = []\r\n        data['error'] = []\r\n\r\n        do {\r\n            xnew = func(xold);\r\n            epsilon = error(xnew, xold)\r\n            data['x'][n] = xnew.toFixed(8);\r\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\r\n            n++;\r\n            xold = xnew;\r\n\r\n        } while (Math.abs(epsilon) > 0.000001);\r\n\r\n        this.createTable(data['x'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createTable(x, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < x.length; i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                x: x[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        let { fx, x0 } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>One Point Iteration</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#001529\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\r\n                            <Button id=\"submit_button\" onClick={\r\n                                () => this.onepoint(parseFloat(x0))\r\n                            }\r\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx} title=\"One Point Iteration Method\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\r\n                            ></Table>\r\n                        </Card>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\nexport default Onepoint;","import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { error, func, funcDiff } from '../../services/Services';\r\nimport Graph from '../../components/Graph';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar dataInTable;\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass Newton extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            x0: 0,\r\n            showOutputCard: false,\r\n            showGraph: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.newton_raphson = this.newton_raphson.bind(this);\r\n    }\r\n\r\n    newton_raphson(xold) {\r\n        var xnew = 0;\r\n        var epsilon = parseFloat(0.000000);\r\n        var n = 0;\r\n        var data = []\r\n        data['x'] = []\r\n        data['error'] = []\r\n        do {\r\n            xnew = xold - (func(xold) / funcDiff(xold));\r\n            epsilon = error(xnew, xold)\r\n            data['x'][n] = xnew.toFixed(8);\r\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\r\n            n++;\r\n            xold = xnew;\r\n        } while (Math.abs(epsilon) > 0.000001);\r\n\r\n        this.createTable(data['x'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true\r\n        })\r\n\r\n\r\n    }\r\n    createTable(x, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < x.length; i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                x: x[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        let { fx, x0 } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Newton Raphson</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#001529\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\r\n                            <Button id=\"submit_button\" onClick={\r\n                                () => this.newton_raphson(parseFloat(x0))\r\n                            }\r\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx} title=\"Newton-Raphson\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\r\n                            ></Table>\r\n                        </Card>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Newton;","import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { error, func } from '../../services/Services';\r\nimport Graph from '../../components/Graph';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar dataInTable = []\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"Y\",\r\n        dataIndex: \"y\",\r\n        key: \"y\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass Secant extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            x0: 0,\r\n            x1: 0,\r\n            showOutputCard: false,\r\n            showGraph: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.secant = this.secant.bind(this);\r\n    }\r\n\r\n    secant(x0, x1) {\r\n        var x = [], y = 0, epsilon = parseFloat(0.000000);\r\n        var n = 1, i = 1;\r\n        var data = []\r\n        data['y'] = []\r\n        data['error'] = []\r\n        x.push(x0);\r\n        x.push(x1);\r\n        data['y'][0] = x0;\r\n        data['error'][0] = \"---\";\r\n\r\n        do {\r\n            y = x[i] - (func(x[i]) * ((x[i] - x[i - 1]))) / (func(x[i]) - func(x[i - 1]));\r\n            x.push(y);\r\n            epsilon = error(y, x[i]);\r\n            data['y'][n] = y.toFixed(8);\r\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\r\n\r\n            n++;\r\n            i++;\r\n\r\n        } while (Math.abs(epsilon) > 0.000001);\r\n        this.createTable(data['y'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createTable(y, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < y.length; i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                y: y[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { fx, x0, x1 } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Secant Method</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#001529\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\r\n                            <h2>X<sub>1</sub></h2><Input size=\"large\" name=\"x1\" style={InputStyle}></Input><br /><br />\r\n                            <Button id=\"submit_button\" onClick={\r\n                                () => this.secant(parseFloat(x0), parseFloat(x1))\r\n                            }\r\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx} title=\"Secant Method\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\r\n                            ></Table>\r\n                        </Card>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Secant;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card, Input, Button } from 'antd';\r\nimport { det } from 'mathjs';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\n\r\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\r\nclass Cramer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: parseInt(0),\r\n            column: parseInt(0),\r\n            showDimentionForm: true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cramer = this.cramer.bind(this);\r\n\r\n    }\r\n\r\n    cramer() {\r\n        this.initMatrix();\r\n        var counter = 0;\r\n        \r\n\r\n        while (counter != this.state.row) {\r\n            var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\r\n            for (var i = 0; i < this.state.row; i++) {\r\n                for (var j = 0; j < this.state.column; j++) {\r\n                    if (j === counter) {\r\n                        transformMatrix[i][j] = B[i]\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            counter++;\r\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\r\n            answer.push(<br />)\r\n\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"14%\",\r\n                    height: \"50%\",\r\n                    backgroundColor: \"#06d9a0\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"14%\",\r\n                height: \"50%\",\r\n                backgroundColor: \"black\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n\r\n    }\r\n\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { row, column } = this.state;\r\n        return (\r\n            <div style={{ padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Cramer's Rule</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#001529\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n\r\n                            {this.state.showDimentionForm &&\r\n                                <div>\r\n                                    <h4>Row</h4><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h4>Column</h4><Input size=\"large\" name=\"column\" style={InputStyle}></Input><br />\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(row, column)\r\n                                    }\r\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                            {this.state.showMatrixForm &&\r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br />{matrixA}\r\n                                    <h2>Vector [B]<br /></h2>{matrixB}<br/>\r\n                                    <Button\r\n                                        size=\"large\"\r\n                                        id=\"matrix_button\"\r\n                                        style={{ background: \"blue\", color: \"white\" }}\r\n                                        onClick={() => this.cramer()}>\r\n                                        Submit\r\n                                </Button>\r\n                                </div>\r\n                            }\r\n\r\n\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ width: \"100%\", background: \"#3d683d\", color: \"#FFFFFFFF\", float: \"left\" }}\r\n                                onChange={this.handleChange}>\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{answer}</p>\r\n                            </Card>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Cramer;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card, Input, Button } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], X, matrixA = [], matrixB = [], output = []\r\nclass Gauss extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm: true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.gauss = this.gauss.bind(this);\r\n\r\n    }\r\n\r\n    gauss(n) {\r\n        this.initMatrix()\r\n        if (A[0][0] === 0) { //pivoting\r\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\r\n            var tempColumn = B[0];\r\n            A[0] = A[1];\r\n            A[1] = tempRow;\r\n            B[0] = B[1];\r\n            B[1] = tempColumn;\r\n        }\r\n        //Forward eliminated\r\n        for (var k = 0; k < n; k++) {\r\n            for (var i = k + 1; i < n; i++) {\r\n                var factor = A[i][k] / A[k][k];\r\n                for (var j = k; j < n; j++) {\r\n                    A[i][j] = A[i][j] - factor * A[k][j];\r\n                }\r\n                B[i] = B[i] - factor * B[k];\r\n\r\n            }\r\n        }\r\n        //Backward Substitution\r\n        X = new Array(n);\r\n        X[n - 1] = B[n - 1] / A[n - 1][n - 1]; //find Xn\r\n        for (i = n - 2; i >= 0; i--) { //find Xn-1 to X1\r\n            var sum = B[i];\r\n            for (j = i + 1; j < n; j++) {\r\n                sum = sum - A[i][j] * X[j];\r\n            }\r\n            X[i] = Math.round(sum / A[i][i]);\r\n        }\r\n        for (i = 0; i < n; i++) {\r\n            output.push(\"x\" + (i + 1) + \" = \" + X[i]);\r\n            output.push(<br />)\r\n        }\r\n\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n    }\r\n    createMatrix(row, column) {\r\n        A = []\r\n        B = []\r\n        X = []\r\n        matrixA = []\r\n        matrixB = []\r\n        output = []\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\",\r\n                    backgroundColor: \"#06d9a0\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                backgroundColor: \"black\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n\r\n\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n\r\n    }\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Gauss Elimination</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#f44336\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n\r\n\r\n                            {this.state.showDimentionForm &&\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(this.state.row, this.state.column)\r\n                                    }\r\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n\r\n                            {this.state.showMatrixForm &&\r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br />{matrixA}\r\n                                    <h2>Vector [B]<br /></h2>{matrixB}\r\n                                    \r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        style={{ background: \"blue\", color: \"white\" }}\r\n                                        onClick={() => this.gauss(this.state.row)}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                        </Card>                        \r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\r\n                                onChange={this.handleChange} id=\"answerCard\">\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\r\n                            </Card>\r\n                        }                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Gauss;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card, Input, Button } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\r\nclass Jordan extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm: true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.jordan = this.jordan.bind(this);\r\n\r\n    }\r\n\r\n    jordan(n) {\r\n        this.initMatrix();\r\n        if (A[0][0] === 0) { //pivoting\r\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\r\n            var tempColumn = B[0];\r\n            A[0] = A[1];\r\n            A[1] = tempRow;\r\n            B[0] = B[1];\r\n            B[1] = tempColumn;\r\n        }\r\n        //Forward eliminate\r\n        for (var k = 0; k < n; k++) {\r\n            for (var i = k + 1; i < n; i++) {\r\n                var factor = A[i][k] / A[k][k];\r\n                for (var j = k; j < n; j++) {\r\n                    A[i][j] = A[i][j] - factor * A[k][j];\r\n                }\r\n                B[i] = B[i] - factor * B[k];\r\n\r\n            }\r\n        }\r\n        //Backward Substitution\r\n        for (k = n - 1; k >= 0; k--) {\r\n            for (i = k; i >= 0; i--) {\r\n\r\n                if (i === k) {//Identity matrix\r\n                    factor = 1 / A[i][k];\r\n\r\n                    for (j = 0; j < n; j++) {\r\n                        A[i][j] = A[i][j] * factor;\r\n                    }\r\n                    B[i] = B[i] * factor;\r\n\r\n\r\n                }\r\n                else {\r\n                    factor = A[i][k] / A[k][k];\r\n                    for (j = 0; j < n; j++) {\r\n                        A[i][j] = A[i][j] - factor * A[k][j];\r\n                    }\r\n                    B[i] = B[i] - factor * B[k];\r\n                }\r\n            }\r\n        }\r\n        for (i = 0; i < n; i++) {\r\n            output.push(B[i]);\r\n            output.push(<br />)\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n\r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\",\r\n                    backgroundColor: \"#06d9a0\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                backgroundColor: \"black\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n\r\n\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n\r\n    }\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        let { row, column } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Gauss-Jordan Method</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ width: 400, background: \"#f44336\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n\r\n                            {this.state.showDimentionForm &&\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(row, column)\r\n                                    }\r\n                                        style={{ background: \"#4caf50\", color: \"white\", fontSize: \"20px\" }}>\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n\r\n                            {this.state.showMatrixForm &&\r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br />{matrixA}\r\n                                    <h2>Vector [B]<br /></h2>{matrixB}\r\n                                    \r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        style={{ background: \"blue\", color: \"white\", fontSize: \"20px\" }}\r\n                                        onClick={() => this.jordan(row)}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n\r\n                        </Card>\r\n\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ width: 400, background: \"#3d683d\", color: \"#FFFFFFFF\", float: \"left\" }}\r\n                                onChange={this.handleChange} id=\"answerCard\">\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\r\n                            </Card>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Jordan;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card, Input, Button } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { inv, multiply, fraction, format } from 'mathjs';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], answer\r\n\r\nclass Inverse extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm: true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.inverse = this.inverse.bind(this);\r\n\r\n    }\r\n\r\n    inverse(n) {\r\n        this.initMatrix();\r\n        try {\r\n            A = inv(A);\r\n            answer = multiply(A, B)\r\n            for (var i = 0; i < n; i++) {\r\n                for (var j = 0; j < n; j++) {\r\n                    if (!Number.isInteger(A[i][j])) {\r\n                        A[i][j] = this.printFraction(fraction(A[i][j]));\r\n                    }\r\n\r\n                }\r\n            }\r\n            for (i = 0; i < n; i++) {\r\n                for (j = 0; j < n; j++) {\r\n                    output.push(A[i][j]);\r\n                    output.push(\"  \");\r\n                }\r\n                output.push(<br />)\r\n            }\r\n\r\n        } catch (error) {\r\n            output.push(\"Matrix doesn't exist, Determinant is zero\")\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n    }\r\n\r\n    printFraction(value) {\r\n        return format(value, { fraction: 'ratio' })\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\",\r\n                    backgroundColor: \"#06d9a0\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                backgroundColor: \"black\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n\r\n\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n\r\n    }\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Matrix Inversion</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#f44336\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n\r\n                            {this.state.showDimentionForm &&\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(this.state.row, this.state.column)\r\n                                    }\r\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n\r\n                            {this.state.showMatrixForm &&\r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br />{matrixA}\r\n                                    <h2>Vector [B]<br /></h2>{matrixB}\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        style={{ background: \"blue\", color: \"white\" }}\r\n                                        onClick={() => this.inverse(this.state.row)}>\r\n                                        Submit\r\n                                </Button>\r\n                                </div>\r\n                            }\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\r\n                                onChange={this.handleChange} id=\"answerCard\">\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>X = {JSON.stringify(answer)}</p>\r\n                            </Card>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Inverse;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card, Input, Button } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { lusolve, format } from 'mathjs';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], decompose;\r\nclass LU extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm: true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.Lu = this.Lu.bind(this);\r\n\r\n    }\r\n\r\n    Lu() {\r\n        this.initMatrix();\r\n        decompose = lusolve(A, B)\r\n        for (var i = 0; i < decompose.length; i++) {\r\n            output.push(Math.round(decompose[i]));\r\n            output.push(<br />)\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n\r\n    }\r\n\r\n    printFraction(value) {\r\n        return format(value, { fraction: 'ratio' })\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\",\r\n                    backgroundColor: \"#06d9a0\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                backgroundColor: \"black\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n\r\n\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n\r\n    }\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>LU Decomposition</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"#f44336\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n\r\n\r\n                            {this.state.showDimentionForm &&\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        style={{ background: \"blue\", color: \"white\"}}\r\n                                        onClick={() => this.Lu()}>\r\n                                        Submit\r\n                                </Button>\r\n                                </div>\r\n                            }\r\n\r\n                            {this.state.showMatrixForm &&\r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br />{matrixA}\r\n                                    <h2>Vector [B]<br /></h2>{matrixB}\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(this.state.row, this.state.column)\r\n                                    }\r\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\r\n                                        Submit\r\n                                </Button>\r\n                                </div>\r\n                            }\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ background: \"#3d683d\", color: \"#FFFFFFFF\", float: \"left\" }}\r\n                                onChange={this.handleChange} id=\"answerCard\">\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\r\n                            </Card>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LU;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card, Input, Button} from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { format } from 'mathjs';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\r\nclass Cholesky extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cholesky = this.cholesky.bind(this)\r\n    \r\n    }\r\n\r\n    cholesky(n) {\r\n        this.initMatrix();\r\n        var  x  = new Array(n);\r\n        var  y  = new Array(n)\r\n\r\n        if (matrixA[0][0] === 0) {\r\n            for (var i=0 ; i<n ; i++) {\r\n                var temp = A[0][i];\r\n                matrixA[0][i] = B[i][i];\r\n                matrixB[0][i] = temp;\r\n            }\r\n        }\r\n        var matrixL = new Array(n);\r\n        for(i=0;i<n;i++){\r\n            matrixL[i]  = new Array(n); \r\n            for(var j=0;j<n;j++){\r\n                matrixL[i][j] = 0;\r\n            }\r\n            x[i] = 0;\r\n            y[i] = 0;\r\n        }\r\n        matrixL[0][0] = Math.sqrt(matrixA[0][0]);\r\n        for(var k=1;k<n;k++){\r\n\r\n            for(i=0;i<k;i++){\r\n                var sum = 0;\r\n                if(i!==0){\r\n                    for(j=0;j<i;j++){\r\n                        sum += matrixL[i][j]*matrixL[k][j];\r\n                        //console.log(sum);\r\n                    }\r\n                }\r\n                matrixL[k][i]= (matrixA[i][k]-sum)/matrixL[i][i];//ได้ค่า L ที่ไม่ใช่แนวทะแยง\r\n            }\r\n            sum = 0;\r\n            for(j=0;j<k;j++){\r\n                sum += matrixL[k][j]*matrixL[k][j];\r\n            }\r\n            matrixL[k][k] = Math.sqrt(matrixA[k][k]-sum);\r\n        }\r\n     ;\r\n        y[0] = matrixB[0]/matrixL[0][0];\r\n        for(i=1;i<n;i++){\r\n            sum = 0;\r\n            for(j=0;j<i;j++){\r\n                sum += matrixL[i][j]*y[j];\r\n            }\r\n            y[i] = (matrixB[i]-sum)/matrixL[i][i];\r\n        }\r\n   \r\n        x[n-1] = y[n-1]/matrixL[n-1][n-1];\r\n        for(i=this.state.row-2;i>=0;i--){\r\n            sum = 0;\r\n            for(j=i+1;j<this.state.row;j++){\r\n                sum += matrixL[j][i]*x[j];\r\n            }\r\n            x[i] = (y[i]-sum)/matrixL[i][i];\r\n        }\r\n\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n    }\r\n    summation(L, k) {\r\n        var sum = 0\r\n        for (var i=0 ; i<parseInt(this.state.row) ; i++) {\r\n            for (var j=0 ; j<i-2 ; j++) {\r\n                sum+= L[i][j]*L[k][j]\r\n            }\r\n        }\r\n        return sum\r\n    }\r\n    printFraction (value) {\r\n        return format(value, { fraction: 'ratio' })\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i=0 ; i<row ; i++) {\r\n            for (var j=0 ; j<column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+(i+1)+\"\"+(j+1)} key={\"a\"+(i+1)+\"\"+(j+1)} placeholder={\"a\"+(i+1)+\"\"+(j+1)} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+(i+1)} key={\"b\"+(i+1)} placeholder={\"b\"+(i+1)} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Cholesky Decomposition</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                        bordered={true}\r\n                        style={{ background: \"#f44336\", color: \"#FFFFFFFF\"}}\r\n                        onChange={this.handleChange}\r\n                        >\r\n                            \r\n                            \r\n                            {this.state.showDimentionForm && \r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button id=\"dimention_button\" onClick= {\r\n                                        ()=>this.createMatrix(this.state.row, this.state.column)\r\n                                        }  \r\n                                        style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                </div> \r\n                            }\r\n                            \r\n                            {this.state.showMatrixForm && \r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br/>{matrixA}\r\n                                    <h2>Vector [B]<br/></h2>{matrixB}\r\n                                    <Button \r\n                                        id=\"matrix_button\"  \r\n                                        style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\r\n                                        onClick={()=>this.cholesky(this.state.row)}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                        \r\n                            \r\n                        </Card>                        \r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}  id=\"answerCard\">\r\n                                <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\r\n                            </Card>\r\n                        }   \r\n                    </div>\r\n                </div>     \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Cholesky;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card, Input, Button, Table} from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], x , epsilon, dataInTable = [], count=1, matrixX = []\r\nvar columns = [\r\n    {\r\n      title: \"Iteration\",\r\n      dataIndex: \"iteration\",\r\n      key: \"iteration\"\r\n    }\r\n];\r\nclass Jacobi extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.jacobi = this.jacobi.bind(this);\r\n    \r\n    }\r\n\r\n  \r\n    jacobi(n) {\r\n        this.initMatrix();\r\n        var temp;\r\n        var xold;\r\n        epsilon = new Array(n);\r\n        do {\r\n            temp = [];\r\n            xold = JSON.parse(JSON.stringify(x));\r\n            for (var i=0 ; i<n ; i++) {\r\n                var sum = 0;\r\n                for (var j=0 ; j<n ; j++) {\r\n                    if (i !== j) { //else i == j That is a divide number\r\n                        sum = sum + A[i][j]*x[j];\r\n                    }\r\n                }\r\n                temp[i] = (B[i] - sum)/A[i][i]; //update x[i]\r\n                \r\n            }        \r\n            x = JSON.parse(JSON.stringify(temp));\r\n        } while(this.error(x, xold)); //if true , continue next iteration\r\n\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    error(xnew, xold) {\r\n        for (var i=0 ; i<xnew.length ; i++) {\r\n            epsilon[i] = Math.abs((xnew[i]-xold[i]) / xnew[i])\r\n        }\r\n        this.appendTable(x, epsilon);\r\n        for (i=0 ; i<epsilon.length ; i++) {\r\n            if (epsilon[i] > 0.000001) {\r\n                return true;\r\n            }    \r\n        }\r\n        return false;  \r\n    }   \r\n    createMatrix(row, column) {\r\n        A = []\r\n        B = []\r\n        matrixA = []\r\n        matrixB = []\r\n        x = []\r\n        dataInTable = []\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n            matrixX.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i} />)  \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n            x.push(parseFloat(document.getElementById(\"x\"+(i+1)).value));\r\n        }\r\n    }\r\n    initialSchema(n) {\r\n        for (var i=1 ; i<=n ; i++) {\r\n            columns.push({\r\n                title: \"X\"+i,\r\n                dataIndex: \"x\"+i,\r\n                key: \"x\"+i\r\n            },)\r\n        }\r\n        for (i=1 ; i<=n ; i++) {\r\n            columns.push({\r\n                title: \"Error\"+i,\r\n                dataIndex: \"error\"+i,\r\n                key: \"error\"+i\r\n            },)\r\n        }\r\n    }\r\n    appendTable(x, error) {\r\n        var tag = ''\r\n        tag += '{\"iteration\": ' + count++ + ',';\r\n        for (var i=0 ; i<x.length ; i++) {\r\n            tag += '\"x'+(i+1)+'\": '+x[i].toFixed(8)+', \"error'+(i+1)+'\": ' + error[i].toFixed(8);\r\n            if (i !== x.length-1) {\r\n                tag += ','\r\n            }\r\n        }\r\n        tag += '}';\r\n        dataInTable.push(JSON.parse(tag));  \r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Jacobi Iteration Method</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                        bordered={true}\r\n                        style={{ background: \"#f44336\", color: \"#FFFFFFFF\"}}\r\n                        onChange={this.handleChange}\r\n                        >\r\n                            \r\n                            {this.state.showDimentionForm && \r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button id=\"dimention_button\" onClick= {\r\n                                        ()=>{this.createMatrix(this.state.row, this.state.column);\r\n                                            this.initialSchema(this.state.row)}\r\n                                        }  \r\n                                        style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                </div> \r\n                            }\r\n                            \r\n                            {this.state.showMatrixForm && \r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br/>{matrixA}\r\n                                    <h2>Vector [B]<br/></h2>{matrixB}\r\n                                    <h2>Initial X<br/></h2>{matrixX}\r\n                                    <Button \r\n                                        id=\"matrix_button\"  \r\n                                        style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\r\n                                        onClick={()=>this.jacobi(parseInt(this.state.row))}>\r\n                                        Submit\r\n                                    </Button>                          \r\n                                </div>\r\n                            }\r\n                            \r\n                        </Card>                        \r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard && \r\n                            <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                            >\r\n                                <Table columns={columns} bordered dataSource={dataInTable} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\", border:\"2px solid white\"}}></Table>\r\n                            </Card>\r\n                        }                          \r\n                    </div>\r\n\r\n                    \r\n\r\n \r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Jacobi;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card, Input, Button, Table} from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { error } from '../../services/Services';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], x , epsilon, output = [], dataInTable = [], count=1, matrixX = []\r\nvar columns = [\r\n    {\r\n      title: \"Iteration\",\r\n      dataIndex: \"iteration\",\r\n      key: \"iteration\"\r\n    }\r\n];\r\nclass Seidel extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.seidel = this.seidel.bind(this);\r\n    \r\n    }\r\n\r\n  \r\n    seidel(n) {\r\n        this.initMatrix();\r\n        x = new Array(n);\r\n        var xold\r\n        epsilon = new Array(n);\r\n        do {\r\n            xold = JSON.parse(JSON.stringify(x));\r\n            for (var i=0 ; i<n ; i++) {\r\n                var sum = 0;\r\n                for (var j=0 ; j<n ; j++) {\r\n                    if (i !== j) { //else i == j That is a divide number\r\n                        sum = sum + A[i][j]*x[j];\r\n                    }\r\n                }\r\n                x[i] = (B[i] - sum)/A[i][i]; //update x[i]\r\n                \r\n            }        \r\n        } while(error(x, xold)); //if true , continue next iteration\r\n        \r\n        \r\n        for (i=0 ; i<x.length ; i++) {\r\n                output.push(x[i]);\r\n                output.push(<br/>);\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    error(xnew, xold) {\r\n        for (var i=0 ; i<xnew.length ; i++) {\r\n            epsilon[i] = Math.abs((xnew[i]-xold[i]) / xnew[i])\r\n        }\r\n        this.appendTable(x, epsilon);\r\n        for (i=0 ; i<epsilon.length ; i++) {\r\n            if (epsilon[i] > 0.000001) {\r\n                return true;\r\n            }    \r\n        }\r\n        return false;  \r\n    }   \r\n    createMatrix(row, column) {\r\n        A = []\r\n        B = []\r\n        matrixA = []\r\n        matrixB = []\r\n        matrixX = []\r\n        x = []\r\n        dataInTable = []\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n            matrixX.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n            x.push(parseFloat(document.getElementById(\"x\"+(i+1)).value));\r\n        }\r\n    }\r\n    initialSchema(n) {\r\n        for (var i=1 ; i<=n ; i++) {\r\n            columns.push({\r\n                title: \"X\"+i,\r\n                dataIndex: \"x\"+i,\r\n                key: \"x\"+i\r\n            },)\r\n        }\r\n        for (i=1 ; i<=n ; i++) {\r\n            columns.push({\r\n                title: \"Error\"+i,\r\n                dataIndex: \"error\"+i,\r\n                key: \"error\"+i\r\n            },)\r\n        }\r\n    }\r\n    appendTable(x, error) {\r\n        var tag = ''\r\n        tag += '{\"iteration\": ' + count++ + ',';\r\n        for (var i=0 ; i<x.length ; i++) {\r\n            tag += '\"x'+(i+1)+'\": '+x[i].toFixed(8)+', \"error'+(i+1)+'\": ' + error[i].toFixed(8);\r\n            if (i !== x.length-1) {\r\n                tag += ','\r\n            }\r\n        }\r\n        tag += '}';\r\n        dataInTable.push(JSON.parse(tag));  \r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Gauss-Seidel Iteration Method</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                        bordered={true}\r\n                        style={{ background: \"#f44336\", color: \"#FFFFFFFF\"}}\r\n                        onChange={this.handleChange}\r\n                        >\r\n                            {this.state.showDimentionForm && \r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button id=\"dimention_button\" onClick= {\r\n                                        ()=>{this.createMatrix(this.state.row, this.state.column);\r\n                                            this.initialSchema(this.state.row)}\r\n                                        }  \r\n                                        style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div> \r\n                            }\r\n                            \r\n                            {this.state.showMatrixForm && \r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br/>{matrixA}\r\n                                    <h2>Vector [B]<br/></h2>{matrixB}\r\n                                    <h2>Initial X<br/></h2>{matrixX}\r\n                                    <Button \r\n                                        id=\"matrix_button\"  \r\n                                        style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\r\n                                        onClick={()=>this.seidel(parseInt(this.state.row))}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                            \r\n                        </Card>                        \r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard && \r\n                            <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                            >\r\n                                <Table columns={columns} dataSource={dataInTable} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\"}}\r\n                                ></Table>\r\n                            </Card>\r\n                        }                           \r\n                    </div>\r\n\r\n                    \r\n\r\n\r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Seidel;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card, Input, Button, Table} from 'antd';\r\nimport {det, add, subtract, multiply, transpose } from 'mathjs';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], matrixX = [],  x , epsilon, dataInTable = [], count=1, output\r\nvar columns = [\r\n    {\r\n      title: \"Iteration\",\r\n      dataIndex: \"iteration\",\r\n      key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"λ\",\r\n        dataIndex: \"lambda\",\r\n        key: \"lambda\"\r\n    },\r\n    {\r\n        title: \"{X}\",\r\n        dataIndex: \"X\",\r\n        key: \"X\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        dataIndex: \"error\",\r\n        key: \"error\"\r\n    }\r\n];\r\nclass Gradient extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.conjugate_gradient = this.conjugate_gradient.bind(this);\r\n    \r\n    }\r\n    positive_definite(dimention) {\r\n        var tempMatrix = []\r\n        for (var i=0 ; i<dimention ; i++) {\r\n            tempMatrix[i] = []\r\n            for (var j=0 ; j<dimention ; j++) {\r\n                tempMatrix[i][j] = A[i][j];\r\n            }\r\n        }\r\n        if (det(tempMatrix) <= 0) {\r\n            return false;\r\n        }\r\n        if (dimention !== this.state.row-1) {\r\n            return this.positive_definite(++dimention);\r\n        }\r\n        return true;\r\n    }\r\n  \r\n    conjugate_gradient() {\r\n        this.initMatrix();\r\n        if (!this.positive_definite(1)) {\r\n            output = \"This matrix doesn't positive definite\"\r\n            this.setState({\r\n                showOutputCard: true\r\n            });\r\n            return false;\r\n        }\r\n        //find {R0}\r\n        var R = subtract(multiply(A,x), B);\r\n        console.log(R)\r\n        //find D0\r\n        var D = multiply(R, -1);\r\n        console.log(D)\r\n        do {\r\n            //find λ\r\n            var λ = (multiply(multiply(transpose(D), R), -1)) / \r\n                    (multiply(multiply(transpose(D), A), D))\r\n            console.log(λ)\r\n            /*------------------------------------------------------------------*/\r\n\r\n            //find new {X}\r\n            x = add(x, multiply(λ, D));\r\n            console.log(x)\r\n            //find new {R}\r\n            R = subtract(multiply(A, x), B);\r\n            console.log(R)\r\n            //find epsilon\r\n            epsilon = Math.sqrt(multiply(transpose(R), R)).toFixed(8);\r\n            this.appendTable(λ, JSON.stringify(x).split(',').join(\",\\n\"), epsilon);\r\n            console.log(epsilon)\r\n            var α = (multiply(multiply(transpose(R), A), D)) /\r\n                    multiply(transpose(D), multiply(A, D)).toFixed(8);\r\n            console.log(α)\r\n            D = add(multiply(R, -1), multiply(α, D))\r\n            console.log(D)\r\n        }while (epsilon > 0.000001);\r\n        output = x\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    createMatrix(row, column) {\r\n        A = []\r\n        B = []\r\n        matrixA = []\r\n        matrixB = []\r\n        matrixX = []\r\n        x = []\r\n        dataInTable = []\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n            matrixX.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n            x.push(parseFloat(document.getElementById(\"x\"+(i+1)).value));\r\n        }\r\n    }\r\n    appendTable(lambda, x, error) {\r\n         dataInTable.push({\r\n             iteration: count++,\r\n             lambda: lambda,\r\n             X: x,\r\n             error: error\r\n         });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\", float:\"left\"}}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Conjugate Gradient Iteration Method</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                        bordered={true}\r\n                        style={{ background: \"#f44336\", color: \"#FFFFFFFF\" }}\r\n                        onChange={this.handleChange}\r\n                        >\r\n                            \r\n                            {this.state.showDimentionForm && \r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                                    <Button id=\"dimention_button\" onClick= {\r\n                                        ()=>{this.createMatrix(this.state.row, this.state.column)}\r\n                                        }  \r\n                                        style={{background: \"#4caf50\", color: \"white\"}}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div> \r\n                            }\r\n                            \r\n                            {this.state.showMatrixForm && \r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br/>{matrixA}\r\n                                    <h2>Vector [B]<br/></h2>{matrixB}\r\n                                    <h2>Initial X<br/></h2>{matrixX}\r\n                                    <Button \r\n                                        id=\"matrix_button\"  \r\n                                        style={{background: \"blue\", color: \"white\"}}\r\n                                        onClick={()=>this.conjugate_gradient(parseInt(this.state.row))}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                                \r\n                            }                            \r\n                        </Card>                        \r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard && \r\n                            <div>     \r\n                                <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\r\n                                onChange={this.handleChange}  id=\"answerCard\">\r\n                                    <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{JSON.stringify(output)}</p>\r\n                                </Card>    \r\n                                <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\"}}\r\n                                id=\"outputCard\"\r\n                                >\r\n                                    <Table columns={columns} dataSource={dataInTable} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\"}}\r\n                                    ></Table>\r\n                                </Card>\r\n                            \r\n                            </div>\r\n\r\n                        }                           \r\n                    </div>\r\n\r\n                    \r\n\r\n\r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Gradient;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport StarCanvas from './StarfieldCanvas';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FundFilled, FacebookFilled, BookFilled } from '@ant-design/icons';\r\n\r\nimport Graphical from './Calculate/Root of Equation/Graphical';\r\nimport Bisection from './Calculate/Root of Equation/Bisection';\r\nimport FalsePosition from './Calculate/Root of Equation/False_position';\r\nimport Onepoint from './Calculate/Root of Equation/Onepoint';\r\nimport Newton from './Calculate/Root of Equation/Newton-raphson';\r\nimport Secant from './Calculate/Root of Equation/Secant';\r\nimport Cramer from './Calculate/Linear Algebra/Cramer';\r\nimport Gauss from './Calculate/Linear Algebra/Gauss';\r\nimport Jordan from './Calculate/Linear Algebra/Jordan';\r\nimport Inverse from './Calculate/Linear Algebra/Inverse';\r\nimport LU from './Calculate/Linear Algebra/LU';\r\nimport Cholesky from './Calculate/Linear Algebra/Cholesky';\r\nimport Jacobi from './Calculate/Linear Algebra/Jacobi';\r\nimport Seidel from './Calculate/Linear Algebra/Seidel';\r\nimport Gradient from './Calculate/Linear Algebra/Gradient';\r\n// import NewtonInterpolate from './Calculate/Interpolation/Newton';\r\n// import Lagrange from './Calculate/Interpolation/Lagrange';\r\n// import Spline from './Calculate/Interpolation/Spline';\r\n// import Linear from './Calculate/Regression/Linear';\r\n// import Polynomial from './Calculate/Regression/Polynomial';\r\n// import MultipleLinear from './Calculate/Regression/MultipleLinear';\r\n// import CompositeTrapezoidal from './Calculate/Integration/CompositeTrapzoidal';\r\n// import CompositeSimpson from './Calculate/Integration/CompositeSimpson';\r\n// import ForwardH from './Calculate/Differentiation/Forwardh';\r\n// import ForwardH2 from './Calculate/Differentiation/ForwardH2';\r\n// import BackwardH from './Calculate/Differentiation/Backwardh';\r\n// import BackwardH2 from './Calculate/Differentiation/Backwardh2';\r\n// import CentralH from './Calculate/Differentiation/Centralh';\r\n// import CentralH2 from './Calculate/Differentiation/Centralh2';\r\n// import Euler from './Calculate/ODE/Euler';\r\n// import Heun from './Calculate/ODE/Heun';\r\n// import ModifiedEuler from './Calculate/ODE/Modified_Euler';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider, Footer } = Layout;\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout>\r\n          <Header className=\"header\" style={{ height: \"80px\" }}>\r\n            <div className=\"headertext\">\r\n              <FundFilled style={{ color: \"white\", fontSize: \"70%\" }} />\r\n              <label className=\"typewriter\">&nbsp;&nbsp;&nbsp;Numerical Method</label>\r\n            </div>\r\n          </Header>\r\n\r\n          <Layout>\r\n            <StarCanvas />\r\n            <Sider width={335} style={{ background: \"#fff\" }}>\r\n              <Menu\r\n                mode=\"inline\"\r\n                style={{ height: '80vh', borderRight: 0, backgroundColor: \"#001529\", overflowY: \"scroll\" }}\r\n                theme=\"dark\"\r\n              >\r\n                <SubMenu key=\"root_submenu\" title={<span>Root of Equation</span>}>\r\n                  <Menu.Item key=\"menu_graphical\" ><Link to=\"/graphical\">Graphical</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_bisection\" ><Link to=\"/bisection\">Bisection</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_false\"><Link to=\"/false-position\">False Position</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_onepoint\"><Link to=\"/one-point\">One-Point Iteration</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_newton\"><Link to=\"/newton-raphson\">Newton-Raphson</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_secant\"><Link to=\"/secant\">Secant Method</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"algebra_submenu\" title={<span>Linear Algebra</span>}>\r\n                  <Menu.Item key=\"menu_cramer\"><Link to=\"/cramer\">Cramer's Rule</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_gauss\"><Link to=\"/gauss\">Gauss's Elimination</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_jordan\"><Link to=\"/jordan\">Gauss Jordan Method</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_inverse\"><Link to=\"/inverse\">Matrix Inversion</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_lu\"><Link to=\"/lu\">LU Decomposition</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_cholesky\"><Link to=\"/cholesky\">Cholesky Decomposition</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_jacobi\"><Link to=\"/jacobi\">Jacobi Iteration Method</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_seidel\"><Link to=\"/seidel\">Gauss Seidel Iteration</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_gradient\"><Link to=\"/conjugate-gradient\">Conjugate Gradient Method</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"interpolate_submenu\" title={<span>Interpolation</span>}>\r\n                  <Menu.Item key=\"menu_divide\">Newton Divide Difference</Menu.Item>\r\n                  <Menu.Item key=\"menu_lagrange\">Lagrange</Menu.Item>\r\n                  <Menu.Item key=\"menu_spline\">Spline</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"regression_submenu\" title={<span>Least Squares Regression</span>}>\r\n                  <Menu.Item key=\"menu_linear\">Linear Regression</Menu.Item>\r\n                  <Menu.Item key=\"menu_poly\">Polynomial Regression</Menu.Item>\r\n                  <Menu.Item key=\"menu_multiple\">Multiple Linear Regression</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"integrate_submenu\" title={<span>Integration</span>}>\r\n                  <Menu.Item key=\"menu_compositeTrapzoidal\">Composite Trapezoidal Rule</Menu.Item>\r\n                  <Menu.Item key=\"menu_compositeSimpson\">Composite Simpson's Rule</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"diff_submenu\" title={<span>Differentiation</span>}>\r\n                  <Menu.Item key=\"menu_forwardh\">Forward Divided-Differences O(h)</Menu.Item>\r\n                  <Menu.Item key=\"menu_backwardh\">Backward Divided-Differences O(h)</Menu.Item>\r\n                  <Menu.Item key=\"menu_centralh\">Central Divided-Differences O(h{<sup>2</sup>})</Menu.Item>\r\n                  <Menu.Item key=\"menu_forward2h\">Forward Divided-Differences O(h{<sup>2</sup>})</Menu.Item>\r\n                  <Menu.Item key=\"menu_backward2h\">Backward Divided-Differences O(h{<sup>2</sup>})</Menu.Item>\r\n                  <Menu.Item key=\"menu_central2h\">Central Divided-Differences O(h{<sup>4</sup>})</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"de_submenu\" title={<span>Ordinary Differential Equation</span>}>\r\n                  <Menu.Item key=\"menu_euler\">Euler's Method</Menu.Item>\r\n                  <Menu.Item key=\"menu_heun\">Heun's Method</Menu.Item>\r\n                  <Menu.Item key=\"menu_modifier\">Modifier Euler's Method</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Layout style={{ padding: '0 24px 24px' }}>\r\n              <Content style={{ padding: 24, margin: 0, minHeight: 280, }}>\r\n                <Switch>\r\n                  <Route exact path=\"/graphical\" component={Graphical} />\r\n                  <Route exact path=\"/bisection\" component={Bisection} />\r\n                  <Route exact path=\"/false-position\" component={FalsePosition} />\r\n                  <Route exact path=\"/one-point\" component={Onepoint} />\r\n                  <Route exact path=\"/newton-raphson\" component={Newton} />\r\n                  <Route exact path=\"/secant\" component={Secant} />\r\n                  <Route exact path=\"/cramer\" component={Cramer} />\r\n                  <Route exact path=\"/gauss\" component={Gauss} />\r\n                  <Route exact path=\"/jordan\" component={Jordan} />\r\n                  <Route exact path=\"/inverse\" component={Inverse} />\r\n                  <Route exact path=\"/lu\" component={LU} />\r\n                  <Route exact path=\"/cholesky\" component={Cholesky} />\r\n                  <Route exact path=\"/jacobi\" component={Jacobi} />\r\n                  <Route exact path=\"/seidel\" component={Seidel} />\r\n                  <Route exact path=\"/conjugate-gradient\" component={Gradient} />\r\n                </Switch>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n          <Footer style={{ backgroundColor: \"#001529\", minHeight: 120 }}>\r\n            <p style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"white\" }}>\r\n              © All Right Reserved<br />\r\n              <FacebookFilled style={{ fontSize: \"30px\" }} /><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.facebook.com/kornkung.h\" style={{ color: \"white\", textDecoration: \"none\" }}> Ronnakorn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hompoa</a>\r\n              <p style={{ fontSize: \"18px\", fontWeight: \"bold\", color: \"white\" }}>\r\n                <BookFilled style={{ fontSize: \"30px\" }} /> Department of Computer and Information Science - King Mongkut's University of Technology North Bangkok\r\n              </p>\r\n            </p>\r\n\r\n\r\n          </Footer>\r\n        </Layout>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}